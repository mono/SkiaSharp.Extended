{
  "README.html": {
    "href": "README.html",
    "title": "| SkiaSharp.Extended",
    "keywords": "View the docs online at https://mono.github.io/SkiaSharp.Extended"
  },
  "api/SkiaSharp.Extended.SKBlurHash.DeserializeBitmap.html": {
    "href": "api/SkiaSharp.Extended.SKBlurHash.DeserializeBitmap.html",
    "title": "Method DeserializeBitmap | SkiaSharp.Extended",
    "keywords": "Method DeserializeBitmap Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll DeserializeBitmap(string, int, int, float) public static SKBitmap DeserializeBitmap(string blurHash, int width, int height, float punch = 1) Parameters blurHash string width int height int punch float Returns SKBitmap DeserializeBitmap(ReadOnlySpan<char>, int, int, float) public static SKBitmap DeserializeBitmap(ReadOnlySpan<char> blurHash, int width, int height, float punch = 1) Parameters blurHash ReadOnlySpan<char> width int height int punch float Returns SKBitmap"
  },
  "api/SkiaSharp.Extended.SKBlurHash.DeserializeImage.html": {
    "href": "api/SkiaSharp.Extended.SKBlurHash.DeserializeImage.html",
    "title": "Method DeserializeImage | SkiaSharp.Extended",
    "keywords": "Method DeserializeImage Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll DeserializeImage(string, int, int, float) public static SKImage DeserializeImage(string blurHash, int width, int height, float punch = 1) Parameters blurHash string width int height int punch float Returns SKImage DeserializeImage(ReadOnlySpan<char>, int, int, float) public static SKImage DeserializeImage(ReadOnlySpan<char> blurHash, int width, int height, float punch = 1) Parameters blurHash ReadOnlySpan<char> width int height int punch float Returns SKImage"
  },
  "api/SkiaSharp.Extended.SKBlurHash.Serialize.html": {
    "href": "api/SkiaSharp.Extended.SKBlurHash.Serialize.html",
    "title": "Method Serialize | SkiaSharp.Extended",
    "keywords": "Method Serialize Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll Serialize(SKBitmap, int, int) public static string Serialize(SKBitmap bitmap, int componentsX, int componentsY) Parameters bitmap SKBitmap componentsX int componentsY int Returns string Serialize(SKImage, int, int) public static string Serialize(SKImage image, int componentsX, int componentsY) Parameters image SKImage componentsX int componentsY int Returns string Serialize(SKPixmap, int, int) public static string Serialize(SKPixmap pixmap, int componentsX, int componentsY) Parameters pixmap SKPixmap componentsX int componentsY int Returns string"
  },
  "api/SkiaSharp.Extended.SKBlurHash.html": {
    "href": "api/SkiaSharp.Extended.SKBlurHash.html",
    "title": "Class SKBlurHash | SkiaSharp.Extended",
    "keywords": "Class SKBlurHash Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll public static class SKBlurHash Inheritance object SKBlurHash Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods DeserializeBitmap(ReadOnlySpan<char>, int, int, float) DeserializeBitmap(string, int, int, float) DeserializeImage(ReadOnlySpan<char>, int, int, float) DeserializeImage(string, int, int, float) Serialize(SKBitmap, int, int) Serialize(SKImage, int, int) Serialize(SKPixmap, int, int)"
  },
  "api/SkiaSharp.Extended.SKGeometry.Area.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.Area.html",
    "title": "Method Area | SkiaSharp.Extended",
    "keywords": "Method Area Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll Area(IList<SKPoint>) public static float Area(IList<SKPoint> polygon) Parameters polygon IList<SKPoint> Returns float"
  },
  "api/SkiaSharp.Extended.SKGeometry.CirclePoint.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.CirclePoint.html",
    "title": "Method CirclePoint | SkiaSharp.Extended",
    "keywords": "Method CirclePoint Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll CirclePoint(float, float) public static SKPoint CirclePoint(float radius, float radians) Parameters radius float radians float Returns SKPoint"
  },
  "api/SkiaSharp.Extended.SKGeometry.CreateInterpolation.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.CreateInterpolation.html",
    "title": "Method CreateInterpolation | SkiaSharp.Extended",
    "keywords": "Method CreateInterpolation Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll CreateInterpolation(SKPath, SKPath, float) public static SKPath CreateInterpolation(SKPath from, SKPath to, float t) Parameters from SKPath to SKPath t float Returns SKPath"
  },
  "api/SkiaSharp.Extended.SKGeometry.CreateRectanglePath.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.CreateRectanglePath.html",
    "title": "Method CreateRectanglePath | SkiaSharp.Extended",
    "keywords": "Method CreateRectanglePath Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll CreateRectanglePath(float, float, SKPathDirection) public static SKPath CreateRectanglePath(float width, float height, SKPathDirection direction = SKPathDirection.Clockwise) Parameters width float height float direction SKPathDirection Returns SKPath"
  },
  "api/SkiaSharp.Extended.SKGeometry.CreateRegularPolygonPath.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.CreateRegularPolygonPath.html",
    "title": "Method CreateRegularPolygonPath | SkiaSharp.Extended",
    "keywords": "Method CreateRegularPolygonPath Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll CreateRegularPolygonPath(float, int, bool, SKPathDirection) public static SKPath CreateRegularPolygonPath(float radius, int points, bool horizontalBase = true, SKPathDirection direction = SKPathDirection.Clockwise) Parameters radius float points int horizontalBase bool direction SKPathDirection Returns SKPath"
  },
  "api/SkiaSharp.Extended.SKGeometry.CreateRegularStarPath.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.CreateRegularStarPath.html",
    "title": "Method CreateRegularStarPath | SkiaSharp.Extended",
    "keywords": "Method CreateRegularStarPath Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll CreateRegularStarPath(float, float, int, SKPathDirection) public static SKPath CreateRegularStarPath(float outerRadius, float innerRadius, int points, SKPathDirection direction = SKPathDirection.Clockwise) Parameters outerRadius float innerRadius float points int direction SKPathDirection Returns SKPath"
  },
  "api/SkiaSharp.Extended.SKGeometry.CreateSquarePath.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.CreateSquarePath.html",
    "title": "Method CreateSquarePath | SkiaSharp.Extended",
    "keywords": "Method CreateSquarePath Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll CreateSquarePath(float, SKPathDirection) public static SKPath CreateSquarePath(float side, SKPathDirection direction = SKPathDirection.Clockwise) Parameters side float direction SKPathDirection Returns SKPath"
  },
  "api/SkiaSharp.Extended.SKGeometry.CreateTrianglePath.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.CreateTrianglePath.html",
    "title": "Method CreateTrianglePath | SkiaSharp.Extended",
    "keywords": "Method CreateTrianglePath Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll CreateTrianglePath(float, float, SKPathDirection) public static SKPath CreateTrianglePath(float width, float height, SKPathDirection direction = SKPathDirection.Clockwise) Parameters width float height float direction SKPathDirection Returns SKPath CreateTrianglePath(float, SKPathDirection) public static SKPath CreateTrianglePath(float radius, SKPathDirection direction = SKPathDirection.Clockwise) Parameters radius float direction SKPathDirection Returns SKPath"
  },
  "api/SkiaSharp.Extended.SKGeometry.PI.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.PI.html",
    "title": "Field PI | SkiaSharp.Extended",
    "keywords": "Field PI Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll public const float PI = 3.1415927 Returns float"
  },
  "api/SkiaSharp.Extended.SKGeometry.Perimeter.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.Perimeter.html",
    "title": "Method Perimeter | SkiaSharp.Extended",
    "keywords": "Method Perimeter Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll Perimeter(IList<SKPoint>) public static float Perimeter(IList<SKPoint> polygon) Parameters polygon IList<SKPoint> Returns float"
  },
  "api/SkiaSharp.Extended.SKGeometry.PointAlong.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.PointAlong.html",
    "title": "Method PointAlong | SkiaSharp.Extended",
    "keywords": "Method PointAlong Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll PointAlong(SKPoint, SKPoint, float) public static SKPoint PointAlong(SKPoint a, SKPoint b, float pct) Parameters a SKPoint b SKPoint pct float Returns SKPoint"
  },
  "api/SkiaSharp.Extended.SKGeometry.html": {
    "href": "api/SkiaSharp.Extended.SKGeometry.html",
    "title": "Class SKGeometry | SkiaSharp.Extended",
    "keywords": "Class SKGeometry Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll public static class SKGeometry Inheritance object SKGeometry Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields PI Methods Area(IList<SKPoint>) CirclePoint(float, float) CreateInterpolation(SKPath, SKPath, float) CreateRectanglePath(float, float, SKPathDirection) CreateRegularPolygonPath(float, int, bool, SKPathDirection) CreateRegularStarPath(float, float, int, SKPathDirection) CreateSquarePath(float, SKPathDirection) CreateTrianglePath(float, SKPathDirection) CreateTrianglePath(float, float, SKPathDirection) Perimeter(IList<SKPoint>) PointAlong(SKPoint, SKPoint, float)"
  },
  "api/SkiaSharp.Extended.SKGeometryExtensions.DrawRegularPolygon.html": {
    "href": "api/SkiaSharp.Extended.SKGeometryExtensions.DrawRegularPolygon.html",
    "title": "Method DrawRegularPolygon | SkiaSharp.Extended",
    "keywords": "Method DrawRegularPolygon Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll DrawRegularPolygon(SKCanvas, SKPoint, float, int, SKPaint) public static void DrawRegularPolygon(this SKCanvas canvas, SKPoint c, float radius, int points, SKPaint paint) Parameters canvas SKCanvas c SKPoint radius float points int paint SKPaint DrawRegularPolygon(SKCanvas, float, float, float, int, SKPaint) public static void DrawRegularPolygon(this SKCanvas canvas, float cx, float cy, float radius, int points, SKPaint paint) Parameters canvas SKCanvas cx float cy float radius float points int paint SKPaint"
  },
  "api/SkiaSharp.Extended.SKGeometryExtensions.DrawSquare.html": {
    "href": "api/SkiaSharp.Extended.SKGeometryExtensions.DrawSquare.html",
    "title": "Method DrawSquare | SkiaSharp.Extended",
    "keywords": "Method DrawSquare Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll DrawSquare(SKCanvas, SKPoint, float, SKPaint) public static void DrawSquare(this SKCanvas canvas, SKPoint c, float side, SKPaint paint) Parameters canvas SKCanvas c SKPoint side float paint SKPaint DrawSquare(SKCanvas, float, float, float, SKPaint) public static void DrawSquare(this SKCanvas canvas, float cx, float cy, float side, SKPaint paint) Parameters canvas SKCanvas cx float cy float side float paint SKPaint"
  },
  "api/SkiaSharp.Extended.SKGeometryExtensions.DrawStar.html": {
    "href": "api/SkiaSharp.Extended.SKGeometryExtensions.DrawStar.html",
    "title": "Method DrawStar | SkiaSharp.Extended",
    "keywords": "Method DrawStar Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll DrawStar(SKCanvas, SKPoint, float, float, int, SKPaint) public static void DrawStar(this SKCanvas canvas, SKPoint c, float outerRadius, float innerRadius, int points, SKPaint paint) Parameters canvas SKCanvas c SKPoint outerRadius float innerRadius float points int paint SKPaint DrawStar(SKCanvas, float, float, float, float, int, SKPaint) public static void DrawStar(this SKCanvas canvas, float cx, float cy, float outerRadius, float innerRadius, int points, SKPaint paint) Parameters canvas SKCanvas cx float cy float outerRadius float innerRadius float points int paint SKPaint"
  },
  "api/SkiaSharp.Extended.SKGeometryExtensions.DrawTriangle.html": {
    "href": "api/SkiaSharp.Extended.SKGeometryExtensions.DrawTriangle.html",
    "title": "Method DrawTriangle | SkiaSharp.Extended",
    "keywords": "Method DrawTriangle Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll DrawTriangle(SKCanvas, SKPoint, SKSize, SKPaint) public static void DrawTriangle(this SKCanvas canvas, SKPoint c, SKSize r, SKPaint paint) Parameters canvas SKCanvas c SKPoint r SKSize paint SKPaint DrawTriangle(SKCanvas, float, float, float, float, SKPaint) public static void DrawTriangle(this SKCanvas canvas, float cx, float cy, float rx, float ry, SKPaint paint) Parameters canvas SKCanvas cx float cy float rx float ry float paint SKPaint DrawTriangle(SKCanvas, SKRect, SKPaint) public static void DrawTriangle(this SKCanvas canvas, SKRect rect, SKPaint paint) Parameters canvas SKCanvas rect SKRect paint SKPaint DrawTriangle(SKCanvas, SKPoint, float, SKPaint) public static void DrawTriangle(this SKCanvas canvas, SKPoint c, float radius, SKPaint paint) Parameters canvas SKCanvas c SKPoint radius float paint SKPaint DrawTriangle(SKCanvas, float, float, float, SKPaint) public static void DrawTriangle(this SKCanvas canvas, float cx, float cy, float radius, SKPaint paint) Parameters canvas SKCanvas cx float cy float radius float paint SKPaint"
  },
  "api/SkiaSharp.Extended.SKGeometryExtensions.html": {
    "href": "api/SkiaSharp.Extended.SKGeometryExtensions.html",
    "title": "Class SKGeometryExtensions | SkiaSharp.Extended",
    "keywords": "Class SKGeometryExtensions Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll public static class SKGeometryExtensions Inheritance object SKGeometryExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods DrawRegularPolygon(SKCanvas, SKPoint, float, int, SKPaint) DrawRegularPolygon(SKCanvas, float, float, float, int, SKPaint) DrawSquare(SKCanvas, SKPoint, float, SKPaint) DrawSquare(SKCanvas, float, float, float, SKPaint) DrawStar(SKCanvas, SKPoint, float, float, int, SKPaint) DrawStar(SKCanvas, float, float, float, float, int, SKPaint) DrawTriangle(SKCanvas, SKPoint, SKSize, SKPaint) DrawTriangle(SKCanvas, SKPoint, float, SKPaint) DrawTriangle(SKCanvas, SKRect, SKPaint) DrawTriangle(SKCanvas, float, float, float, SKPaint) DrawTriangle(SKCanvas, float, float, float, float, SKPaint)"
  },
  "api/SkiaSharp.Extended.SKPathInterpolation.-ctor.html": {
    "href": "api/SkiaSharp.Extended.SKPathInterpolation.-ctor.html",
    "title": "Constructor SKPathInterpolation | SkiaSharp.Extended",
    "keywords": "Constructor SKPathInterpolation Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll SKPathInterpolation(SKPath, SKPath, float) public SKPathInterpolation(SKPath from, SKPath to, float maxSegmentLength = 5) Parameters from SKPath to SKPath maxSegmentLength float"
  },
  "api/SkiaSharp.Extended.SKPathInterpolation.From.html": {
    "href": "api/SkiaSharp.Extended.SKPathInterpolation.From.html",
    "title": "Property From | SkiaSharp.Extended",
    "keywords": "Property From Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll From public SKPath From { get; } Property Value SKPath"
  },
  "api/SkiaSharp.Extended.SKPathInterpolation.Interpolate.html": {
    "href": "api/SkiaSharp.Extended.SKPathInterpolation.Interpolate.html",
    "title": "Method Interpolate | SkiaSharp.Extended",
    "keywords": "Method Interpolate Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll Interpolate(float) public SKPath Interpolate(float t) Parameters t float Returns SKPath"
  },
  "api/SkiaSharp.Extended.SKPathInterpolation.MaxSegmentLength.html": {
    "href": "api/SkiaSharp.Extended.SKPathInterpolation.MaxSegmentLength.html",
    "title": "Property MaxSegmentLength | SkiaSharp.Extended",
    "keywords": "Property MaxSegmentLength Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll MaxSegmentLength public float MaxSegmentLength { get; } Property Value float"
  },
  "api/SkiaSharp.Extended.SKPathInterpolation.Prepare.html": {
    "href": "api/SkiaSharp.Extended.SKPathInterpolation.Prepare.html",
    "title": "Method Prepare | SkiaSharp.Extended",
    "keywords": "Method Prepare Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll Prepare() public void Prepare()"
  },
  "api/SkiaSharp.Extended.SKPathInterpolation.To.html": {
    "href": "api/SkiaSharp.Extended.SKPathInterpolation.To.html",
    "title": "Property To | SkiaSharp.Extended",
    "keywords": "Property To Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll To public SKPath To { get; } Property Value SKPath"
  },
  "api/SkiaSharp.Extended.SKPathInterpolation.html": {
    "href": "api/SkiaSharp.Extended.SKPathInterpolation.html",
    "title": "Class SKPathInterpolation | SkiaSharp.Extended",
    "keywords": "Class SKPathInterpolation Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll public class SKPathInterpolation Inheritance object SKPathInterpolation Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKPathInterpolation(SKPath, SKPath, float) Properties From MaxSegmentLength To Methods Interpolate(float) Prepare()"
  },
  "api/SkiaSharp.Extended.SKPixelComparer.Compare.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparer.Compare.html",
    "title": "Method Compare | SkiaSharp.Extended",
    "keywords": "Method Compare Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll Compare(string, string) public static SKPixelComparisonResult Compare(string firstFilename, string secondFilename) Parameters firstFilename string secondFilename string Returns SKPixelComparisonResult Compare(SKBitmap, SKBitmap) public static SKPixelComparisonResult Compare(SKBitmap first, SKBitmap second) Parameters first SKBitmap second SKBitmap Returns SKPixelComparisonResult Compare(SKPixmap, SKPixmap) public static SKPixelComparisonResult Compare(SKPixmap first, SKPixmap second) Parameters first SKPixmap second SKPixmap Returns SKPixelComparisonResult Compare(SKImage, SKImage) public static SKPixelComparisonResult Compare(SKImage first, SKImage second) Parameters first SKImage second SKImage Returns SKPixelComparisonResult Compare(string, string, string) public static SKPixelComparisonResult Compare(string firstFilename, string secondFilename, string maskFilename) Parameters firstFilename string secondFilename string maskFilename string Returns SKPixelComparisonResult Compare(SKBitmap, SKBitmap, SKBitmap) public static SKPixelComparisonResult Compare(SKBitmap first, SKBitmap second, SKBitmap mask) Parameters first SKBitmap second SKBitmap mask SKBitmap Returns SKPixelComparisonResult Compare(SKPixmap, SKPixmap, SKPixmap) public static SKPixelComparisonResult Compare(SKPixmap first, SKPixmap second, SKPixmap mask) Parameters first SKPixmap second SKPixmap mask SKPixmap Returns SKPixelComparisonResult Compare(SKImage, SKImage, SKImage) public static SKPixelComparisonResult Compare(SKImage first, SKImage second, SKImage mask) Parameters first SKImage second SKImage mask SKImage Returns SKPixelComparisonResult"
  },
  "api/SkiaSharp.Extended.SKPixelComparer.GenerateDifferenceMask.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparer.GenerateDifferenceMask.html",
    "title": "Method GenerateDifferenceMask | SkiaSharp.Extended",
    "keywords": "Method GenerateDifferenceMask Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll GenerateDifferenceMask(string, string) public static SKImage GenerateDifferenceMask(string firstFilename, string secondFilename) Parameters firstFilename string secondFilename string Returns SKImage GenerateDifferenceMask(SKBitmap, SKBitmap) public static SKImage GenerateDifferenceMask(SKBitmap first, SKBitmap second) Parameters first SKBitmap second SKBitmap Returns SKImage GenerateDifferenceMask(SKPixmap, SKPixmap) public static SKImage GenerateDifferenceMask(SKPixmap first, SKPixmap second) Parameters first SKPixmap second SKPixmap Returns SKImage GenerateDifferenceMask(SKImage, SKImage) public static SKImage GenerateDifferenceMask(SKImage first, SKImage second) Parameters first SKImage second SKImage Returns SKImage"
  },
  "api/SkiaSharp.Extended.SKPixelComparer.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparer.html",
    "title": "Class SKPixelComparer | SkiaSharp.Extended",
    "keywords": "Class SKPixelComparer Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll public static class SKPixelComparer Inheritance object SKPixelComparer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Compare(SKBitmap, SKBitmap) Compare(SKBitmap, SKBitmap, SKBitmap) Compare(SKImage, SKImage) Compare(SKImage, SKImage, SKImage) Compare(SKPixmap, SKPixmap) Compare(SKPixmap, SKPixmap, SKPixmap) Compare(string, string) Compare(string, string, string) GenerateDifferenceMask(SKBitmap, SKBitmap) GenerateDifferenceMask(SKImage, SKImage) GenerateDifferenceMask(SKPixmap, SKPixmap) GenerateDifferenceMask(string, string)"
  },
  "api/SkiaSharp.Extended.SKPixelComparisonResult.-ctor.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparisonResult.-ctor.html",
    "title": "Constructor SKPixelComparisonResult | SkiaSharp.Extended",
    "keywords": "Constructor SKPixelComparisonResult Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll SKPixelComparisonResult(int, int, int) public SKPixelComparisonResult(int totalPixels, int errorPixelCount, int absoluteError) Parameters totalPixels int errorPixelCount int absoluteError int"
  },
  "api/SkiaSharp.Extended.SKPixelComparisonResult.AbsoluteError.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparisonResult.AbsoluteError.html",
    "title": "Property AbsoluteError | SkiaSharp.Extended",
    "keywords": "Property AbsoluteError Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll AbsoluteError public int AbsoluteError { get; } Property Value int"
  },
  "api/SkiaSharp.Extended.SKPixelComparisonResult.ErrorPixelCount.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparisonResult.ErrorPixelCount.html",
    "title": "Property ErrorPixelCount | SkiaSharp.Extended",
    "keywords": "Property ErrorPixelCount Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll ErrorPixelCount public int ErrorPixelCount { get; } Property Value int"
  },
  "api/SkiaSharp.Extended.SKPixelComparisonResult.ErrorPixelPercentage.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparisonResult.ErrorPixelPercentage.html",
    "title": "Property ErrorPixelPercentage | SkiaSharp.Extended",
    "keywords": "Property ErrorPixelPercentage Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll ErrorPixelPercentage public double ErrorPixelPercentage { get; } Property Value double"
  },
  "api/SkiaSharp.Extended.SKPixelComparisonResult.TotalPixels.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparisonResult.TotalPixels.html",
    "title": "Property TotalPixels | SkiaSharp.Extended",
    "keywords": "Property TotalPixels Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll TotalPixels public int TotalPixels { get; } Property Value int"
  },
  "api/SkiaSharp.Extended.SKPixelComparisonResult.html": {
    "href": "api/SkiaSharp.Extended.SKPixelComparisonResult.html",
    "title": "Class SKPixelComparisonResult | SkiaSharp.Extended",
    "keywords": "Class SKPixelComparisonResult Namespace SkiaSharp.Extended Assembly SkiaSharp.Extended.dll public class SKPixelComparisonResult Inheritance object SKPixelComparisonResult Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKPixelComparisonResult(int, int, int) Properties AbsoluteError ErrorPixelCount ErrorPixelPercentage TotalPixels"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiColorCollectionTypeConverter.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiColorCollectionTypeConverter.-ctor.html",
    "title": "Constructor SKConfettiColorCollectionTypeConverter | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiColorCollectionTypeConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll SKConfettiColorCollectionTypeConverter() public SKConfettiColorCollectionTypeConverter()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiColorCollectionTypeConverter.ConvertFromStringCore.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiColorCollectionTypeConverter.ConvertFromStringCore.html",
    "title": "Method ConvertFromStringCore | SkiaSharp.Extended",
    "keywords": "Method ConvertFromStringCore Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertFromStringCore(string?) protected override object? ConvertFromStringCore(string? value) Parameters value string Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiColorCollectionTypeConverter.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiColorCollectionTypeConverter.html",
    "title": "Class SKConfettiColorCollectionTypeConverter | SkiaSharp.Extended",
    "keywords": "Class SKConfettiColorCollectionTypeConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll public class SKConfettiColorCollectionTypeConverter : StringTypeConverter Inheritance object TypeConverter StringTypeConverter SKConfettiColorCollectionTypeConverter Inherited Members StringTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type) StringTypeConverter.CanConvertTo(ITypeDescriptorContext, Type) StringTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, object) StringTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) StringTypeConverter.ConvertToStringCore(object) TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(object) TypeConverter.GetConvertToException(object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(object) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(object) TypeConverter.IsValid(ITypeDescriptorContext, object) TypeConverter.SortProperties(PropertyDescriptorCollection, string[]) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiColorCollectionTypeConverter() Methods ConvertFromStringCore(string?)"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiEmitterBoundsTypeConverter.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiEmitterBoundsTypeConverter.-ctor.html",
    "title": "Constructor SKConfettiEmitterBoundsTypeConverter | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiEmitterBoundsTypeConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll SKConfettiEmitterBoundsTypeConverter() public SKConfettiEmitterBoundsTypeConverter()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiEmitterBoundsTypeConverter.ConvertFromStringCore.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiEmitterBoundsTypeConverter.ConvertFromStringCore.html",
    "title": "Method ConvertFromStringCore | SkiaSharp.Extended",
    "keywords": "Method ConvertFromStringCore Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertFromStringCore(string?) protected override object? ConvertFromStringCore(string? value) Parameters value string Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiEmitterBoundsTypeConverter.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiEmitterBoundsTypeConverter.html",
    "title": "Class SKConfettiEmitterBoundsTypeConverter | SkiaSharp.Extended",
    "keywords": "Class SKConfettiEmitterBoundsTypeConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll public class SKConfettiEmitterBoundsTypeConverter : StringTypeConverter Inheritance object TypeConverter StringTypeConverter SKConfettiEmitterBoundsTypeConverter Inherited Members StringTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type) StringTypeConverter.CanConvertTo(ITypeDescriptorContext, Type) StringTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, object) StringTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) StringTypeConverter.ConvertToStringCore(object) TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(object) TypeConverter.GetConvertToException(object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(object) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(object) TypeConverter.IsValid(ITypeDescriptorContext, object) TypeConverter.SortProperties(PropertyDescriptorCollection, string[]) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiEmitterBoundsTypeConverter() Methods ConvertFromStringCore(string?)"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiPhysicsTypeConverter.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiPhysicsTypeConverter.-ctor.html",
    "title": "Constructor SKConfettiPhysicsTypeConverter | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiPhysicsTypeConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll SKConfettiPhysicsTypeConverter() public SKConfettiPhysicsTypeConverter()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiPhysicsTypeConverter.ConvertFromStringCore.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiPhysicsTypeConverter.ConvertFromStringCore.html",
    "title": "Method ConvertFromStringCore | SkiaSharp.Extended",
    "keywords": "Method ConvertFromStringCore Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertFromStringCore(string?) protected override object? ConvertFromStringCore(string? value) Parameters value string Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiPhysicsTypeConverter.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKConfettiPhysicsTypeConverter.html",
    "title": "Class SKConfettiPhysicsTypeConverter | SkiaSharp.Extended",
    "keywords": "Class SKConfettiPhysicsTypeConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll public class SKConfettiPhysicsTypeConverter : StringTypeConverter Inheritance object TypeConverter StringTypeConverter SKConfettiPhysicsTypeConverter Inherited Members StringTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type) StringTypeConverter.CanConvertTo(ITypeDescriptorContext, Type) StringTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, object) StringTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) StringTypeConverter.ConvertToStringCore(object) TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(object) TypeConverter.GetConvertToException(object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(object) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(object) TypeConverter.IsValid(ITypeDescriptorContext, object) TypeConverter.SortProperties(PropertyDescriptorCollection, string[]) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiPhysicsTypeConverter() Methods ConvertFromStringCore(string?)"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKLottieImageSourceConverter.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKLottieImageSourceConverter.-ctor.html",
    "title": "Constructor SKLottieImageSourceConverter | SkiaSharp.Extended",
    "keywords": "Constructor SKLottieImageSourceConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll SKLottieImageSourceConverter() public SKLottieImageSourceConverter()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKLottieImageSourceConverter.ConvertFromStringCore.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKLottieImageSourceConverter.ConvertFromStringCore.html",
    "title": "Method ConvertFromStringCore | SkiaSharp.Extended",
    "keywords": "Method ConvertFromStringCore Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertFromStringCore(string?) protected override object? ConvertFromStringCore(string? value) Parameters value string Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKLottieImageSourceConverter.ConvertToStringCore.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKLottieImageSourceConverter.ConvertToStringCore.html",
    "title": "Method ConvertToStringCore | SkiaSharp.Extended",
    "keywords": "Method ConvertToStringCore Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertToStringCore(object?) protected override string? ConvertToStringCore(object? value) Parameters value object Returns string"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.SKLottieImageSourceConverter.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.SKLottieImageSourceConverter.html",
    "title": "Class SKLottieImageSourceConverter | SkiaSharp.Extended",
    "keywords": "Class SKLottieImageSourceConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll public sealed class SKLottieImageSourceConverter : StringTypeConverter Inheritance object TypeConverter StringTypeConverter SKLottieImageSourceConverter Inherited Members StringTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type) StringTypeConverter.CanConvertTo(ITypeDescriptorContext, Type) StringTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, object) StringTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(object) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(object) TypeConverter.IsValid(ITypeDescriptorContext, object) object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKLottieImageSourceConverter() Methods ConvertFromStringCore(string?) ConvertToStringCore(object?)"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.CanConvertFrom.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.CanConvertFrom.html",
    "title": "Method CanConvertFrom | SkiaSharp.Extended",
    "keywords": "Method CanConvertFrom Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll CanConvertFrom(ITypeDescriptorContext?, Type) public override bool CanConvertFrom(ITypeDescriptorContext? context, Type sourceType) Parameters context ITypeDescriptorContext sourceType Type Returns bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.CanConvertTo.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.CanConvertTo.html",
    "title": "Method CanConvertTo | SkiaSharp.Extended",
    "keywords": "Method CanConvertTo Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll CanConvertTo(ITypeDescriptorContext?, Type?) public override bool CanConvertTo(ITypeDescriptorContext? context, Type? destinationType) Parameters context ITypeDescriptorContext destinationType Type Returns bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.ConvertFrom.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.ConvertFrom.html",
    "title": "Method ConvertFrom | SkiaSharp.Extended",
    "keywords": "Method ConvertFrom Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertFrom(ITypeDescriptorContext?, CultureInfo?, object) public override object? ConvertFrom(ITypeDescriptorContext? context, CultureInfo? culture, object value) Parameters context ITypeDescriptorContext culture CultureInfo value object Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.ConvertFromStringCore.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.ConvertFromStringCore.html",
    "title": "Method ConvertFromStringCore | SkiaSharp.Extended",
    "keywords": "Method ConvertFromStringCore Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertFromStringCore(string?) protected abstract object? ConvertFromStringCore(string? value) Parameters value string Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.ConvertTo.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.ConvertTo.html",
    "title": "Method ConvertTo | SkiaSharp.Extended",
    "keywords": "Method ConvertTo Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertTo(ITypeDescriptorContext?, CultureInfo?, object?, Type) public override object? ConvertTo(ITypeDescriptorContext? context, CultureInfo? culture, object? value, Type destinationType) Parameters context ITypeDescriptorContext culture CultureInfo value object destinationType Type Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.ConvertToStringCore.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.ConvertToStringCore.html",
    "title": "Method ConvertToStringCore | SkiaSharp.Extended",
    "keywords": "Method ConvertToStringCore Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll ConvertToStringCore(object?) protected virtual string? ConvertToStringCore(object? value) Parameters value object Returns string"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.StringTypeConverter.html",
    "title": "Class StringTypeConverter | SkiaSharp.Extended",
    "keywords": "Class StringTypeConverter Namespace SkiaSharp.Extended.UI.Controls.Converters Assembly SkiaSharp.Extended.UI.dll public abstract class StringTypeConverter : TypeConverter Inheritance object TypeConverter StringTypeConverter Derived SKConfettiColorCollectionTypeConverter SKConfettiEmitterBoundsTypeConverter SKConfettiPhysicsTypeConverter SKLottieImageSourceConverter Inherited Members TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(object) TypeConverter.GetConvertToException(object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(object) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(object) TypeConverter.IsValid(ITypeDescriptorContext, object) TypeConverter.SortProperties(PropertyDescriptorCollection, string[]) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods CanConvertFrom(ITypeDescriptorContext?, Type) CanConvertTo(ITypeDescriptorContext?, Type?) ConvertFrom(ITypeDescriptorContext?, CultureInfo?, object) ConvertFromStringCore(string?) ConvertTo(ITypeDescriptorContext?, CultureInfo?, object?, Type) ConvertToStringCore(object?)"
  },
  "api/SkiaSharp.Extended.UI.Controls.Converters.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Converters.html",
    "title": "Namespace SkiaSharp.Extended.UI.Controls.Converters | SkiaSharp.Extended",
    "keywords": "Namespace SkiaSharp.Extended.UI.Controls.Converters Classes SKConfettiColorCollectionTypeConverter SKConfettiEmitterBoundsTypeConverter SKConfettiPhysicsTypeConverter SKLottieImageSourceConverter StringTypeConverter"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.-ctor.html",
    "title": "Constructor SKAnimatedSurfaceView | SkiaSharp.Extended",
    "keywords": "Constructor SKAnimatedSurfaceView Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKAnimatedSurfaceView() public SKAnimatedSurfaceView()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.IsAnimationEnabled.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.IsAnimationEnabled.html",
    "title": "Property IsAnimationEnabled | SkiaSharp.Extended",
    "keywords": "Property IsAnimationEnabled Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsAnimationEnabled public bool IsAnimationEnabled { get; set; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.IsAnimationEnabledProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.IsAnimationEnabledProperty.html",
    "title": "Field IsAnimationEnabledProperty | SkiaSharp.Extended",
    "keywords": "Field IsAnimationEnabledProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty IsAnimationEnabledProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.Update.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.Update.html",
    "title": "Method Update | SkiaSharp.Extended",
    "keywords": "Method Update Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Update(TimeSpan) protected virtual void Update(TimeSpan deltaTime) Parameters deltaTime TimeSpan"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKAnimatedSurfaceView.html",
    "title": "Class SKAnimatedSurfaceView | SkiaSharp.Extended",
    "keywords": "Class SKAnimatedSurfaceView Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKAnimatedSurfaceView : SKSurfaceView, INotifyPropertyChanged, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, IPropertyMapperView, IHotReloadableView, IReplaceableView, ILayout, ILayoutController, IVisualTreeElement, IContentView, IView, IElement, ITransform, IPadding, ICrossPlatformLayout Inheritance object BindableObject Element StyleableElement NavigableElement VisualElement View Layout TemplatedView SKSurfaceView SKAnimatedSurfaceView Implements INotifyPropertyChanged IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IPropertyMapperView IHotReloadableView IReplaceableView ILayout ILayoutController IVisualTreeElement IContentView IView IElement ITransform IPadding ICrossPlatformLayout Derived SKConfettiView SKLottieView Inherited Members SKSurfaceView.OnApplyTemplate() SKSurfaceView.OnPaintSurface(SKCanvas, SKSize) SKSurfaceView.Invalidate() TemplatedView.ControlTemplateProperty TemplatedView.LayoutChildren(double, double, double, double) TemplatedView.OnMeasure(double, double) TemplatedView.OnChildRemoved(Element, int) TemplatedView.GetTemplateChild(string) TemplatedView.ResolveControlTemplate() TemplatedView.MeasureOverride(double, double) TemplatedView.OnSizeAllocated(double, double) TemplatedView.ArrangeOverride(Rect) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.Measure(double, double, MeasureFlags) Layout.LayoutChildIntoBoundingRegion(VisualElement, Rect) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.CrossPlatformMeasure(double, double) Layout.CrossPlatformArrange(Rect) Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.propertyMapper View.ChangeVisualState() View.GetChildElements(Point) View.OnBindingContextChanged() View.GetRendererOverrides<T>() View.GestureController View.GestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(double, double) VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.InvalidateMeasureOverride() VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.OnParentSet() NavigableElement.Navigation StyleableElement.Style StyleableElement.StyleClass StyleableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKAnimatedSurfaceView() Fields IsAnimationEnabledProperty Properties IsAnimationEnabled Methods Update(TimeSpan)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiCircleShape.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiCircleShape.-ctor.html",
    "title": "Constructor SKConfettiCircleShape | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiCircleShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiCircleShape() public SKConfettiCircleShape()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiCircleShape.OnDraw.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiCircleShape.OnDraw.html",
    "title": "Method OnDraw | SkiaSharp.Extended",
    "keywords": "Method OnDraw Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnDraw(SKCanvas, SKPaint, float) protected override void OnDraw(SKCanvas canvas, SKPaint paint, float size) Parameters canvas SKCanvas paint SKPaint size float"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiCircleShape.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiCircleShape.html",
    "title": "Class SKConfettiCircleShape | SkiaSharp.Extended",
    "keywords": "Class SKConfettiCircleShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiCircleShape : SKConfettiShape, INotifyPropertyChanged Inheritance object BindableObject SKConfettiShape SKConfettiCircleShape Implements INotifyPropertyChanged Inherited Members SKConfettiShape.Draw(SKCanvas, SKPaint, float) BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiCircleShape() Methods OnDraw(SKCanvas, SKPaint, float)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiColorCollection.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiColorCollection.-ctor.html",
    "title": "Constructor SKConfettiColorCollection | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiColorCollection Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiColorCollection() public SKConfettiColorCollection() SKConfettiColorCollection(IEnumerable<Color>) public SKConfettiColorCollection(IEnumerable<Color> collection) Parameters collection IEnumerable<Color> SKConfettiColorCollection(int) public SKConfettiColorCollection(int capacity) Parameters capacity int"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiColorCollection.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiColorCollection.html",
    "title": "Class SKConfettiColorCollection | SkiaSharp.Extended",
    "keywords": "Class SKConfettiColorCollection Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll [TypeConverter(typeof(SKConfettiColorCollectionTypeConverter))] public class SKConfettiColorCollection : List<Color>, IList<Color>, ICollection<Color>, IList, ICollection, IReadOnlyList<Color>, IReadOnlyCollection<Color>, IEnumerable<Color>, IEnumerable Inheritance object List<Color> SKConfettiColorCollection Implements IList<Color> ICollection<Color> IList ICollection IReadOnlyList<Color> IReadOnlyCollection<Color> IEnumerable<Color> IEnumerable Inherited Members List<Color>.Add(Color) List<Color>.AddRange(IEnumerable<Color>) List<Color>.AsReadOnly() List<Color>.BinarySearch(int, int, Color, IComparer<Color>) List<Color>.BinarySearch(Color) List<Color>.BinarySearch(Color, IComparer<Color>) List<Color>.Clear() List<Color>.Contains(Color) List<Color>.ConvertAll<TOutput>(Converter<Color, TOutput>) List<Color>.CopyTo(Color[]) List<Color>.CopyTo(int, Color[], int, int) List<Color>.CopyTo(Color[], int) List<Color>.EnsureCapacity(int) List<Color>.Exists(Predicate<Color>) List<Color>.Find(Predicate<Color>) List<Color>.FindAll(Predicate<Color>) List<Color>.FindIndex(Predicate<Color>) List<Color>.FindIndex(int, Predicate<Color>) List<Color>.FindIndex(int, int, Predicate<Color>) List<Color>.FindLast(Predicate<Color>) List<Color>.FindLastIndex(Predicate<Color>) List<Color>.FindLastIndex(int, Predicate<Color>) List<Color>.FindLastIndex(int, int, Predicate<Color>) List<Color>.ForEach(Action<Color>) List<Color>.GetEnumerator() List<Color>.GetRange(int, int) List<Color>.Slice(int, int) List<Color>.IndexOf(Color) List<Color>.IndexOf(Color, int) List<Color>.IndexOf(Color, int, int) List<Color>.Insert(int, Color) List<Color>.InsertRange(int, IEnumerable<Color>) List<Color>.LastIndexOf(Color) List<Color>.LastIndexOf(Color, int) List<Color>.LastIndexOf(Color, int, int) List<Color>.Remove(Color) List<Color>.RemoveAll(Predicate<Color>) List<Color>.RemoveAt(int) List<Color>.RemoveRange(int, int) List<Color>.Reverse() List<Color>.Reverse(int, int) List<Color>.Sort() List<Color>.Sort(IComparer<Color>) List<Color>.Sort(int, int, IComparer<Color>) List<Color>.Sort(Comparison<Color>) List<Color>.ToArray() List<Color>.TrimExcess() List<Color>.TrueForAll(Predicate<Color>) List<Color>.Capacity List<Color>.Count List<Color>.this[int] object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiColorCollection() SKConfettiColorCollection(IEnumerable<Color>) SKConfettiColorCollection(int)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.-ctor.html",
    "title": "Constructor SKConfettiEmitter | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiEmitter Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiEmitter() public SKConfettiEmitter() SKConfettiEmitter(int, int, double) public SKConfettiEmitter(int particleRate, int maxParticles, double duration) Parameters particleRate int maxParticles int duration double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Burst.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Burst.html",
    "title": "Method Burst | SkiaSharp.Extended",
    "keywords": "Method Burst Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Burst(int) public static SKConfettiEmitter Burst(int particles) Parameters particles int Returns SKConfettiEmitter"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Duration.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Duration.html",
    "title": "Property Duration | SkiaSharp.Extended",
    "keywords": "Property Duration Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Duration public double Duration { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.DurationProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.DurationProperty.html",
    "title": "Field DurationProperty | SkiaSharp.Extended",
    "keywords": "Field DurationProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty DurationProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Infinite.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Infinite.html",
    "title": "Method Infinite | SkiaSharp.Extended",
    "keywords": "Method Infinite Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Infinite(int) public static SKConfettiEmitter Infinite(int particleRate) Parameters particleRate int Returns SKConfettiEmitter Infinite(int, int) public static SKConfettiEmitter Infinite(int particleRate, int maxParticles) Parameters particleRate int maxParticles int Returns SKConfettiEmitter"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.IsComplete.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.IsComplete.html",
    "title": "Property IsComplete | SkiaSharp.Extended",
    "keywords": "Property IsComplete Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsComplete public bool IsComplete { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.IsCompleteProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.IsCompleteProperty.html",
    "title": "Field IsCompleteProperty | SkiaSharp.Extended",
    "keywords": "Field IsCompleteProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty IsCompleteProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.MaxParticles.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.MaxParticles.html",
    "title": "Property MaxParticles | SkiaSharp.Extended",
    "keywords": "Property MaxParticles Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll MaxParticles public int MaxParticles { get; set; } Property Value int"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.MaxParticlesProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.MaxParticlesProperty.html",
    "title": "Field MaxParticlesProperty | SkiaSharp.Extended",
    "keywords": "Field MaxParticlesProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty MaxParticlesProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.ParticleRate.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.ParticleRate.html",
    "title": "Property ParticleRate | SkiaSharp.Extended",
    "keywords": "Property ParticleRate Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll ParticleRate public int ParticleRate { get; set; } Property Value int"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.ParticleRateProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.ParticleRateProperty.html",
    "title": "Field ParticleRateProperty | SkiaSharp.Extended",
    "keywords": "Field ParticleRateProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty ParticleRateProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.ParticlesCreated.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.ParticlesCreated.html",
    "title": "Event ParticlesCreated | SkiaSharp.Extended",
    "keywords": "Event ParticlesCreated Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public event Action<int>? ParticlesCreated Returns Action<int>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Stream.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Stream.html",
    "title": "Method Stream | SkiaSharp.Extended",
    "keywords": "Method Stream Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Stream(int, double) public static SKConfettiEmitter Stream(int particleRate, double duration) Parameters particleRate int duration double Returns SKConfettiEmitter"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Update.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.Update.html",
    "title": "Method Update | SkiaSharp.Extended",
    "keywords": "Method Update Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Update(TimeSpan) public void Update(TimeSpan deltaTime) Parameters deltaTime TimeSpan"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitter.html",
    "title": "Class SKConfettiEmitter | SkiaSharp.Extended",
    "keywords": "Class SKConfettiEmitter Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiEmitter : BindableObject, INotifyPropertyChanged Inheritance object BindableObject SKConfettiEmitter Implements INotifyPropertyChanged Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiEmitter() SKConfettiEmitter(int, int, double) Fields DurationProperty IsCompleteProperty MaxParticlesProperty ParticleRateProperty Properties Duration IsComplete MaxParticles ParticleRate Methods Burst(int) Infinite(int) Infinite(int, int) Stream(int, double) Update(TimeSpan) Events ParticlesCreated"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.-ctor.html",
    "title": "Constructor SKConfettiEmitterBounds | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiEmitterBounds Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiEmitterBounds(SKConfettiEmitterSide) public SKConfettiEmitterBounds(SKConfettiEmitterSide side) Parameters side SKConfettiEmitterSide SKConfettiEmitterBounds(double, double) public SKConfettiEmitterBounds(double x, double y) Parameters x double y double SKConfettiEmitterBounds(Point) public SKConfettiEmitterBounds(Point point) Parameters point Point SKConfettiEmitterBounds(double, double, double, double) public SKConfettiEmitterBounds(double x, double y, double width, double height) Parameters x double y double width double height double SKConfettiEmitterBounds(Rect) public SKConfettiEmitterBounds(Rect rect) Parameters rect Rect"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Bottom.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Bottom.html",
    "title": "Property Bottom | SkiaSharp.Extended",
    "keywords": "Property Bottom Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Bottom public static SKConfettiEmitterBounds Bottom { get; } Property Value SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Bounds.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Bounds.html",
    "title": "Method Bounds | SkiaSharp.Extended",
    "keywords": "Method Bounds Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Bounds(double, double, double, double) public static SKConfettiEmitterBounds Bounds(double x, double y, double width, double height) Parameters x double y double width double height double Returns SKConfettiEmitterBounds Bounds(Rect) public static SKConfettiEmitterBounds Bounds(Rect rect) Parameters rect Rect Returns SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Center.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Center.html",
    "title": "Property Center | SkiaSharp.Extended",
    "keywords": "Property Center Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Center public static SKConfettiEmitterBounds Center { get; } Property Value SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Left.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Left.html",
    "title": "Property Left | SkiaSharp.Extended",
    "keywords": "Property Left Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Left public static SKConfettiEmitterBounds Left { get; } Property Value SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Point.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Point.html",
    "title": "Method Point | SkiaSharp.Extended",
    "keywords": "Method Point Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Point(double, double) public static SKConfettiEmitterBounds Point(double x, double y) Parameters x double y double Returns SKConfettiEmitterBounds Point(Point) public static SKConfettiEmitterBounds Point(Point point) Parameters point Point Returns SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Rect.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Rect.html",
    "title": "Property Rect | SkiaSharp.Extended",
    "keywords": "Property Rect Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Rect public Rect Rect { get; } Property Value Rect"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Right.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Right.html",
    "title": "Property Right | SkiaSharp.Extended",
    "keywords": "Property Right Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Right public static SKConfettiEmitterBounds Right { get; } Property Value SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Side.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Side.html",
    "title": "Property Side | SkiaSharp.Extended",
    "keywords": "Property Side Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Side public SKConfettiEmitterSide Side { get; } Property Value SKConfettiEmitterSide"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Top.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.Top.html",
    "title": "Property Top | SkiaSharp.Extended",
    "keywords": "Property Top Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Top public static SKConfettiEmitterBounds Top { get; } Property Value SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.html",
    "title": "Struct SKConfettiEmitterBounds | SkiaSharp.Extended",
    "keywords": "Struct SKConfettiEmitterBounds Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll [TypeConverter(typeof(SKConfettiEmitterBoundsTypeConverter))] public readonly struct SKConfettiEmitterBounds Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SKConfettiEmitterBounds(Point) SKConfettiEmitterBounds(Rect) SKConfettiEmitterBounds(SKConfettiEmitterSide) SKConfettiEmitterBounds(double, double) SKConfettiEmitterBounds(double, double, double, double) Properties Bottom Center Left Rect Right Side Top Methods Bounds(Rect) Bounds(double, double, double, double) Point(Point) Point(double, double) Operators implicit operator SKConfettiEmitterBounds(Point) implicit operator SKConfettiEmitterBounds(Rect) implicit operator SKConfettiEmitterBounds(SKConfettiEmitterSide)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.op_Implicit.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterBounds.op_Implicit.html",
    "title": "Operator implicit operator | SkiaSharp.Extended",
    "keywords": "Operator implicit operator Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll implicit operator SKConfettiEmitterBounds(SKConfettiEmitterSide) public static implicit operator SKConfettiEmitterBounds(SKConfettiEmitterSide side) Parameters side SKConfettiEmitterSide Returns SKConfettiEmitterBounds implicit operator SKConfettiEmitterBounds(Point) public static implicit operator SKConfettiEmitterBounds(Point point) Parameters point Point Returns SKConfettiEmitterBounds implicit operator SKConfettiEmitterBounds(Rect) public static implicit operator SKConfettiEmitterBounds(Rect rect) Parameters rect Rect Returns SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterSide.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiEmitterSide.html",
    "title": "Enum SKConfettiEmitterSide | SkiaSharp.Extended",
    "keywords": "Enum SKConfettiEmitterSide Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public enum SKConfettiEmitterSide Fields Bottom = 3 Bounds = 5 Center = 4 Left = 1 Right = 2 Top = 0"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.-ctor.html",
    "title": "Constructor SKConfettiOvalShape | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiOvalShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiOvalShape() public SKConfettiOvalShape() SKConfettiOvalShape(double) public SKConfettiOvalShape(double heightRatio) Parameters heightRatio double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.HeightRatio.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.HeightRatio.html",
    "title": "Property HeightRatio | SkiaSharp.Extended",
    "keywords": "Property HeightRatio Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll HeightRatio public double HeightRatio { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.HeightRatioProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.HeightRatioProperty.html",
    "title": "Field HeightRatioProperty | SkiaSharp.Extended",
    "keywords": "Field HeightRatioProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty HeightRatioProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.OnDraw.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.OnDraw.html",
    "title": "Method OnDraw | SkiaSharp.Extended",
    "keywords": "Method OnDraw Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnDraw(SKCanvas, SKPaint, float) protected override void OnDraw(SKCanvas canvas, SKPaint paint, float size) Parameters canvas SKCanvas paint SKPaint size float"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiOvalShape.html",
    "title": "Class SKConfettiOvalShape | SkiaSharp.Extended",
    "keywords": "Class SKConfettiOvalShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiOvalShape : SKConfettiShape, INotifyPropertyChanged Inheritance object BindableObject SKConfettiShape SKConfettiOvalShape Implements INotifyPropertyChanged Inherited Members SKConfettiShape.Draw(SKCanvas, SKPaint, float) BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiOvalShape() SKConfettiOvalShape(double) Fields HeightRatioProperty Properties HeightRatio Methods OnDraw(SKCanvas, SKPaint, float)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.-ctor.html",
    "title": "Constructor SKConfettiPathShape | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiPathShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiPathShape() public SKConfettiPathShape() SKConfettiPathShape(SKPath) public SKConfettiPathShape(SKPath path) Parameters path SKPath"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.OnDraw.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.OnDraw.html",
    "title": "Method OnDraw | SkiaSharp.Extended",
    "keywords": "Method OnDraw Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnDraw(SKCanvas, SKPaint, float) protected override void OnDraw(SKCanvas canvas, SKPaint paint, float size) Parameters canvas SKCanvas paint SKPaint size float"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.Path.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.Path.html",
    "title": "Property Path | SkiaSharp.Extended",
    "keywords": "Property Path Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Path public SKPath? Path { get; set; } Property Value SKPath"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.PathProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.PathProperty.html",
    "title": "Field PathProperty | SkiaSharp.Extended",
    "keywords": "Field PathProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty PathProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPathShape.html",
    "title": "Class SKConfettiPathShape | SkiaSharp.Extended",
    "keywords": "Class SKConfettiPathShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiPathShape : SKConfettiShape, INotifyPropertyChanged Inheritance object BindableObject SKConfettiShape SKConfettiPathShape Implements INotifyPropertyChanged Inherited Members SKConfettiShape.Draw(SKCanvas, SKPaint, float) BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiPathShape() SKConfettiPathShape(SKPath) Fields PathProperty Properties Path Methods OnDraw(SKCanvas, SKPaint, float)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysics.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysics.-ctor.html",
    "title": "Constructor SKConfettiPhysics | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiPhysics Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiPhysics(double, double) public SKConfettiPhysics(double size, double mass) Parameters size double mass double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysics.Mass.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysics.Mass.html",
    "title": "Property Mass | SkiaSharp.Extended",
    "keywords": "Property Mass Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Mass public double Mass { get; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysics.Size.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysics.Size.html",
    "title": "Property Size | SkiaSharp.Extended",
    "keywords": "Property Size Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Size public double Size { get; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysics.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysics.html",
    "title": "Struct SKConfettiPhysics | SkiaSharp.Extended",
    "keywords": "Struct SKConfettiPhysics Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll [TypeConverter(typeof(SKConfettiPhysicsTypeConverter))] public readonly struct SKConfettiPhysics Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.GetType() object.Equals(object, object) object.ReferenceEquals(object, object) Constructors SKConfettiPhysics(double, double) Properties Mass Size"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysicsCollection.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysicsCollection.-ctor.html",
    "title": "Constructor SKConfettiPhysicsCollection | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiPhysicsCollection Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiPhysicsCollection() public SKConfettiPhysicsCollection() SKConfettiPhysicsCollection(IEnumerable<SKConfettiPhysics>) public SKConfettiPhysicsCollection(IEnumerable<SKConfettiPhysics> collection) Parameters collection IEnumerable<SKConfettiPhysics> SKConfettiPhysicsCollection(int) public SKConfettiPhysicsCollection(int capacity) Parameters capacity int"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysicsCollection.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiPhysicsCollection.html",
    "title": "Class SKConfettiPhysicsCollection | SkiaSharp.Extended",
    "keywords": "Class SKConfettiPhysicsCollection Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiPhysicsCollection : List<SKConfettiPhysics>, IList<SKConfettiPhysics>, ICollection<SKConfettiPhysics>, IList, ICollection, IReadOnlyList<SKConfettiPhysics>, IReadOnlyCollection<SKConfettiPhysics>, IEnumerable<SKConfettiPhysics>, IEnumerable Inheritance object List<SKConfettiPhysics> SKConfettiPhysicsCollection Implements IList<SKConfettiPhysics> ICollection<SKConfettiPhysics> IList ICollection IReadOnlyList<SKConfettiPhysics> IReadOnlyCollection<SKConfettiPhysics> IEnumerable<SKConfettiPhysics> IEnumerable Inherited Members List<SKConfettiPhysics>.Add(SKConfettiPhysics) List<SKConfettiPhysics>.AddRange(IEnumerable<SKConfettiPhysics>) List<SKConfettiPhysics>.AsReadOnly() List<SKConfettiPhysics>.BinarySearch(int, int, SKConfettiPhysics, IComparer<SKConfettiPhysics>) List<SKConfettiPhysics>.BinarySearch(SKConfettiPhysics) List<SKConfettiPhysics>.BinarySearch(SKConfettiPhysics, IComparer<SKConfettiPhysics>) List<SKConfettiPhysics>.Clear() List<SKConfettiPhysics>.Contains(SKConfettiPhysics) List<SKConfettiPhysics>.ConvertAll<TOutput>(Converter<SKConfettiPhysics, TOutput>) List<SKConfettiPhysics>.CopyTo(SKConfettiPhysics[]) List<SKConfettiPhysics>.CopyTo(int, SKConfettiPhysics[], int, int) List<SKConfettiPhysics>.CopyTo(SKConfettiPhysics[], int) List<SKConfettiPhysics>.EnsureCapacity(int) List<SKConfettiPhysics>.Exists(Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.Find(Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.FindAll(Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.FindIndex(Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.FindIndex(int, Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.FindIndex(int, int, Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.FindLast(Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.FindLastIndex(Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.FindLastIndex(int, Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.FindLastIndex(int, int, Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.ForEach(Action<SKConfettiPhysics>) List<SKConfettiPhysics>.GetEnumerator() List<SKConfettiPhysics>.GetRange(int, int) List<SKConfettiPhysics>.Slice(int, int) List<SKConfettiPhysics>.IndexOf(SKConfettiPhysics) List<SKConfettiPhysics>.IndexOf(SKConfettiPhysics, int) List<SKConfettiPhysics>.IndexOf(SKConfettiPhysics, int, int) List<SKConfettiPhysics>.Insert(int, SKConfettiPhysics) List<SKConfettiPhysics>.InsertRange(int, IEnumerable<SKConfettiPhysics>) List<SKConfettiPhysics>.LastIndexOf(SKConfettiPhysics) List<SKConfettiPhysics>.LastIndexOf(SKConfettiPhysics, int) List<SKConfettiPhysics>.LastIndexOf(SKConfettiPhysics, int, int) List<SKConfettiPhysics>.Remove(SKConfettiPhysics) List<SKConfettiPhysics>.RemoveAll(Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.RemoveAt(int) List<SKConfettiPhysics>.RemoveRange(int, int) List<SKConfettiPhysics>.Reverse() List<SKConfettiPhysics>.Reverse(int, int) List<SKConfettiPhysics>.Sort() List<SKConfettiPhysics>.Sort(IComparer<SKConfettiPhysics>) List<SKConfettiPhysics>.Sort(int, int, IComparer<SKConfettiPhysics>) List<SKConfettiPhysics>.Sort(Comparison<SKConfettiPhysics>) List<SKConfettiPhysics>.ToArray() List<SKConfettiPhysics>.TrimExcess() List<SKConfettiPhysics>.TrueForAll(Predicate<SKConfettiPhysics>) List<SKConfettiPhysics>.Capacity List<SKConfettiPhysics>.Count List<SKConfettiPhysics>.this[int] object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiPhysicsCollection() SKConfettiPhysicsCollection(IEnumerable<SKConfettiPhysics>) SKConfettiPhysicsCollection(int)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.-ctor.html",
    "title": "Constructor SKConfettiRectShape | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiRectShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiRectShape() public SKConfettiRectShape() SKConfettiRectShape(double) public SKConfettiRectShape(double heightRatio) Parameters heightRatio double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.HeightRatio.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.HeightRatio.html",
    "title": "Property HeightRatio | SkiaSharp.Extended",
    "keywords": "Property HeightRatio Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll HeightRatio public double HeightRatio { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.HeightRatioProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.HeightRatioProperty.html",
    "title": "Field HeightRatioProperty | SkiaSharp.Extended",
    "keywords": "Field HeightRatioProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty HeightRatioProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.OnDraw.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.OnDraw.html",
    "title": "Method OnDraw | SkiaSharp.Extended",
    "keywords": "Method OnDraw Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnDraw(SKCanvas, SKPaint, float) protected override void OnDraw(SKCanvas canvas, SKPaint paint, float size) Parameters canvas SKCanvas paint SKPaint size float"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiRectShape.html",
    "title": "Class SKConfettiRectShape | SkiaSharp.Extended",
    "keywords": "Class SKConfettiRectShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiRectShape : SKConfettiShape, INotifyPropertyChanged Inheritance object BindableObject SKConfettiShape SKConfettiRectShape Implements INotifyPropertyChanged Inherited Members SKConfettiShape.Draw(SKCanvas, SKPaint, float) BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiRectShape() SKConfettiRectShape(double) Fields HeightRatioProperty Properties HeightRatio Methods OnDraw(SKCanvas, SKPaint, float)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiShape.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiShape.-ctor.html",
    "title": "Constructor SKConfettiShape | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiShape() protected SKConfettiShape()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiShape.Draw.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiShape.Draw.html",
    "title": "Method Draw | SkiaSharp.Extended",
    "keywords": "Method Draw Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Draw(SKCanvas, SKPaint, float) public void Draw(SKCanvas canvas, SKPaint paint, float size) Parameters canvas SKCanvas paint SKPaint size float"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiShape.OnDraw.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiShape.OnDraw.html",
    "title": "Method OnDraw | SkiaSharp.Extended",
    "keywords": "Method OnDraw Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnDraw(SKCanvas, SKPaint, float) protected abstract void OnDraw(SKCanvas canvas, SKPaint paint, float size) Parameters canvas SKCanvas paint SKPaint size float"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiShape.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiShape.html",
    "title": "Class SKConfettiShape | SkiaSharp.Extended",
    "keywords": "Class SKConfettiShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public abstract class SKConfettiShape : BindableObject, INotifyPropertyChanged Inheritance object BindableObject SKConfettiShape Implements INotifyPropertyChanged Derived SKConfettiCircleShape SKConfettiOvalShape SKConfettiPathShape SKConfettiRectShape SKConfettiSquareShape Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiShape() Methods Draw(SKCanvas, SKPaint, float) OnDraw(SKCanvas, SKPaint, float)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiShapeCollection.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiShapeCollection.-ctor.html",
    "title": "Constructor SKConfettiShapeCollection | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiShapeCollection Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiShapeCollection() public SKConfettiShapeCollection() SKConfettiShapeCollection(IEnumerable<SKConfettiShape>) public SKConfettiShapeCollection(IEnumerable<SKConfettiShape> collection) Parameters collection IEnumerable<SKConfettiShape> SKConfettiShapeCollection(int) public SKConfettiShapeCollection(int capacity) Parameters capacity int"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiShapeCollection.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiShapeCollection.html",
    "title": "Class SKConfettiShapeCollection | SkiaSharp.Extended",
    "keywords": "Class SKConfettiShapeCollection Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiShapeCollection : List<SKConfettiShape>, IList<SKConfettiShape>, ICollection<SKConfettiShape>, IList, ICollection, IReadOnlyList<SKConfettiShape>, IReadOnlyCollection<SKConfettiShape>, IEnumerable<SKConfettiShape>, IEnumerable Inheritance object List<SKConfettiShape> SKConfettiShapeCollection Implements IList<SKConfettiShape> ICollection<SKConfettiShape> IList ICollection IReadOnlyList<SKConfettiShape> IReadOnlyCollection<SKConfettiShape> IEnumerable<SKConfettiShape> IEnumerable Inherited Members List<SKConfettiShape>.Add(SKConfettiShape) List<SKConfettiShape>.AddRange(IEnumerable<SKConfettiShape>) List<SKConfettiShape>.AsReadOnly() List<SKConfettiShape>.BinarySearch(int, int, SKConfettiShape, IComparer<SKConfettiShape>) List<SKConfettiShape>.BinarySearch(SKConfettiShape) List<SKConfettiShape>.BinarySearch(SKConfettiShape, IComparer<SKConfettiShape>) List<SKConfettiShape>.Clear() List<SKConfettiShape>.Contains(SKConfettiShape) List<SKConfettiShape>.ConvertAll<TOutput>(Converter<SKConfettiShape, TOutput>) List<SKConfettiShape>.CopyTo(SKConfettiShape[]) List<SKConfettiShape>.CopyTo(int, SKConfettiShape[], int, int) List<SKConfettiShape>.CopyTo(SKConfettiShape[], int) List<SKConfettiShape>.EnsureCapacity(int) List<SKConfettiShape>.Exists(Predicate<SKConfettiShape>) List<SKConfettiShape>.Find(Predicate<SKConfettiShape>) List<SKConfettiShape>.FindAll(Predicate<SKConfettiShape>) List<SKConfettiShape>.FindIndex(Predicate<SKConfettiShape>) List<SKConfettiShape>.FindIndex(int, Predicate<SKConfettiShape>) List<SKConfettiShape>.FindIndex(int, int, Predicate<SKConfettiShape>) List<SKConfettiShape>.FindLast(Predicate<SKConfettiShape>) List<SKConfettiShape>.FindLastIndex(Predicate<SKConfettiShape>) List<SKConfettiShape>.FindLastIndex(int, Predicate<SKConfettiShape>) List<SKConfettiShape>.FindLastIndex(int, int, Predicate<SKConfettiShape>) List<SKConfettiShape>.ForEach(Action<SKConfettiShape>) List<SKConfettiShape>.GetEnumerator() List<SKConfettiShape>.GetRange(int, int) List<SKConfettiShape>.Slice(int, int) List<SKConfettiShape>.IndexOf(SKConfettiShape) List<SKConfettiShape>.IndexOf(SKConfettiShape, int) List<SKConfettiShape>.IndexOf(SKConfettiShape, int, int) List<SKConfettiShape>.Insert(int, SKConfettiShape) List<SKConfettiShape>.InsertRange(int, IEnumerable<SKConfettiShape>) List<SKConfettiShape>.LastIndexOf(SKConfettiShape) List<SKConfettiShape>.LastIndexOf(SKConfettiShape, int) List<SKConfettiShape>.LastIndexOf(SKConfettiShape, int, int) List<SKConfettiShape>.Remove(SKConfettiShape) List<SKConfettiShape>.RemoveAll(Predicate<SKConfettiShape>) List<SKConfettiShape>.RemoveAt(int) List<SKConfettiShape>.RemoveRange(int, int) List<SKConfettiShape>.Reverse() List<SKConfettiShape>.Reverse(int, int) List<SKConfettiShape>.Sort() List<SKConfettiShape>.Sort(IComparer<SKConfettiShape>) List<SKConfettiShape>.Sort(int, int, IComparer<SKConfettiShape>) List<SKConfettiShape>.Sort(Comparison<SKConfettiShape>) List<SKConfettiShape>.ToArray() List<SKConfettiShape>.TrimExcess() List<SKConfettiShape>.TrueForAll(Predicate<SKConfettiShape>) List<SKConfettiShape>.Capacity List<SKConfettiShape>.Count List<SKConfettiShape>.this[int] object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiShapeCollection() SKConfettiShapeCollection(IEnumerable<SKConfettiShape>) SKConfettiShapeCollection(int)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSquareShape.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSquareShape.-ctor.html",
    "title": "Constructor SKConfettiSquareShape | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiSquareShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiSquareShape() public SKConfettiSquareShape()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSquareShape.OnDraw.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSquareShape.OnDraw.html",
    "title": "Method OnDraw | SkiaSharp.Extended",
    "keywords": "Method OnDraw Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnDraw(SKCanvas, SKPaint, float) protected override void OnDraw(SKCanvas canvas, SKPaint paint, float size) Parameters canvas SKCanvas paint SKPaint size float"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSquareShape.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSquareShape.html",
    "title": "Class SKConfettiSquareShape | SkiaSharp.Extended",
    "keywords": "Class SKConfettiSquareShape Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiSquareShape : SKConfettiShape, INotifyPropertyChanged Inheritance object BindableObject SKConfettiShape SKConfettiSquareShape Implements INotifyPropertyChanged Inherited Members SKConfettiShape.Draw(SKCanvas, SKPaint, float) BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiSquareShape() Methods OnDraw(SKCanvas, SKPaint, float)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.-ctor.html",
    "title": "Constructor SKConfettiSystem | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiSystem Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiSystem() public SKConfettiSystem()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Colors.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Colors.html",
    "title": "Property Colors | SkiaSharp.Extended",
    "keywords": "Property Colors Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Colors public SKConfettiColorCollection? Colors { get; set; } Property Value SKConfettiColorCollection"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.ColorsProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.ColorsProperty.html",
    "title": "Field ColorsProperty | SkiaSharp.Extended",
    "keywords": "Field ColorsProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty ColorsProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Draw.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Draw.html",
    "title": "Method Draw | SkiaSharp.Extended",
    "keywords": "Method Draw Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Draw(SKCanvas) public void Draw(SKCanvas canvas) Parameters canvas SKCanvas"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Emitter.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Emitter.html",
    "title": "Property Emitter | SkiaSharp.Extended",
    "keywords": "Property Emitter Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Emitter public SKConfettiEmitter? Emitter { get; set; } Property Value SKConfettiEmitter"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EmitterBounds.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EmitterBounds.html",
    "title": "Property EmitterBounds | SkiaSharp.Extended",
    "keywords": "Property EmitterBounds Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll EmitterBounds public SKConfettiEmitterBounds EmitterBounds { get; set; } Property Value SKConfettiEmitterBounds"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EmitterBoundsProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EmitterBoundsProperty.html",
    "title": "Field EmitterBoundsProperty | SkiaSharp.Extended",
    "keywords": "Field EmitterBoundsProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty EmitterBoundsProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EmitterProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EmitterProperty.html",
    "title": "Field EmitterProperty | SkiaSharp.Extended",
    "keywords": "Field EmitterProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty EmitterProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EndAngle.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EndAngle.html",
    "title": "Property EndAngle | SkiaSharp.Extended",
    "keywords": "Property EndAngle Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll EndAngle public double EndAngle { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EndAngleProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.EndAngleProperty.html",
    "title": "Field EndAngleProperty | SkiaSharp.Extended",
    "keywords": "Field EndAngleProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty EndAngleProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.FadeOut.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.FadeOut.html",
    "title": "Property FadeOut | SkiaSharp.Extended",
    "keywords": "Property FadeOut Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll FadeOut public bool FadeOut { get; set; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.FadeOutProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.FadeOutProperty.html",
    "title": "Field FadeOutProperty | SkiaSharp.Extended",
    "keywords": "Field FadeOutProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty FadeOutProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Gravity.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Gravity.html",
    "title": "Property Gravity | SkiaSharp.Extended",
    "keywords": "Property Gravity Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Gravity public Point Gravity { get; set; } Property Value Point"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.GravityProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.GravityProperty.html",
    "title": "Field GravityProperty | SkiaSharp.Extended",
    "keywords": "Field GravityProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty GravityProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.IsAnimationEnabled.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.IsAnimationEnabled.html",
    "title": "Property IsAnimationEnabled | SkiaSharp.Extended",
    "keywords": "Property IsAnimationEnabled Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsAnimationEnabled public bool IsAnimationEnabled { get; set; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.IsAnimationEnabledProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.IsAnimationEnabledProperty.html",
    "title": "Field IsAnimationEnabledProperty | SkiaSharp.Extended",
    "keywords": "Field IsAnimationEnabledProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty IsAnimationEnabledProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.IsComplete.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.IsComplete.html",
    "title": "Property IsComplete | SkiaSharp.Extended",
    "keywords": "Property IsComplete Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsComplete public bool IsComplete { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.IsCompleteProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.IsCompleteProperty.html",
    "title": "Field IsCompleteProperty | SkiaSharp.Extended",
    "keywords": "Field IsCompleteProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty IsCompleteProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Lifetime.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Lifetime.html",
    "title": "Property Lifetime | SkiaSharp.Extended",
    "keywords": "Property Lifetime Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Lifetime public double Lifetime { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.LifetimeProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.LifetimeProperty.html",
    "title": "Field LifetimeProperty | SkiaSharp.Extended",
    "keywords": "Field LifetimeProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty LifetimeProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumInitialVelocity.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumInitialVelocity.html",
    "title": "Property MaximumInitialVelocity | SkiaSharp.Extended",
    "keywords": "Property MaximumInitialVelocity Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll MaximumInitialVelocity public double MaximumInitialVelocity { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumInitialVelocityProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumInitialVelocityProperty.html",
    "title": "Field MaximumInitialVelocityProperty | SkiaSharp.Extended",
    "keywords": "Field MaximumInitialVelocityProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty MaximumInitialVelocityProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumRotationVelocity.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumRotationVelocity.html",
    "title": "Property MaximumRotationVelocity | SkiaSharp.Extended",
    "keywords": "Property MaximumRotationVelocity Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll MaximumRotationVelocity public double MaximumRotationVelocity { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumRotationVelocityProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumRotationVelocityProperty.html",
    "title": "Field MaximumRotationVelocityProperty | SkiaSharp.Extended",
    "keywords": "Field MaximumRotationVelocityProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty MaximumRotationVelocityProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumVelocity.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumVelocity.html",
    "title": "Property MaximumVelocity | SkiaSharp.Extended",
    "keywords": "Property MaximumVelocity Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll MaximumVelocity public double MaximumVelocity { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumVelocityProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MaximumVelocityProperty.html",
    "title": "Field MaximumVelocityProperty | SkiaSharp.Extended",
    "keywords": "Field MaximumVelocityProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty MaximumVelocityProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MinimumInitialVelocity.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MinimumInitialVelocity.html",
    "title": "Property MinimumInitialVelocity | SkiaSharp.Extended",
    "keywords": "Property MinimumInitialVelocity Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll MinimumInitialVelocity public double MinimumInitialVelocity { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MinimumInitialVelocityProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MinimumInitialVelocityProperty.html",
    "title": "Field MinimumInitialVelocityProperty | SkiaSharp.Extended",
    "keywords": "Field MinimumInitialVelocityProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty MinimumInitialVelocityProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MinimumRotationVelocity.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MinimumRotationVelocity.html",
    "title": "Property MinimumRotationVelocity | SkiaSharp.Extended",
    "keywords": "Property MinimumRotationVelocity Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll MinimumRotationVelocity public double MinimumRotationVelocity { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MinimumRotationVelocityProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.MinimumRotationVelocityProperty.html",
    "title": "Field MinimumRotationVelocityProperty | SkiaSharp.Extended",
    "keywords": "Field MinimumRotationVelocityProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty MinimumRotationVelocityProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Physics.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Physics.html",
    "title": "Property Physics | SkiaSharp.Extended",
    "keywords": "Property Physics Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Physics public SKConfettiPhysicsCollection? Physics { get; set; } Property Value SKConfettiPhysicsCollection"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.PhysicsProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.PhysicsProperty.html",
    "title": "Field PhysicsProperty | SkiaSharp.Extended",
    "keywords": "Field PhysicsProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty PhysicsProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Shapes.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Shapes.html",
    "title": "Property Shapes | SkiaSharp.Extended",
    "keywords": "Property Shapes Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Shapes public SKConfettiShapeCollection? Shapes { get; set; } Property Value SKConfettiShapeCollection"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.ShapesProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.ShapesProperty.html",
    "title": "Field ShapesProperty | SkiaSharp.Extended",
    "keywords": "Field ShapesProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty ShapesProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.StartAngle.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.StartAngle.html",
    "title": "Property StartAngle | SkiaSharp.Extended",
    "keywords": "Property StartAngle Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll StartAngle public double StartAngle { get; set; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.StartAngleProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.StartAngleProperty.html",
    "title": "Field StartAngleProperty | SkiaSharp.Extended",
    "keywords": "Field StartAngleProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty StartAngleProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Update.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.Update.html",
    "title": "Method Update | SkiaSharp.Extended",
    "keywords": "Method Update Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Update(TimeSpan) public void Update(TimeSpan deltaTime) Parameters deltaTime TimeSpan"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.UpdateEmitterBounds.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.UpdateEmitterBounds.html",
    "title": "Method UpdateEmitterBounds | SkiaSharp.Extended",
    "keywords": "Method UpdateEmitterBounds Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll UpdateEmitterBounds(double, double) public void UpdateEmitterBounds(double width, double height) Parameters width double height double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystem.html",
    "title": "Class SKConfettiSystem | SkiaSharp.Extended",
    "keywords": "Class SKConfettiSystem Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiSystem : BindableObject, INotifyPropertyChanged Inheritance object BindableObject SKConfettiSystem Implements INotifyPropertyChanged Inherited Members BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnBindingContextChanged() BindableObject.OnPropertyChanged(string) BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiSystem() Fields ColorsProperty EmitterBoundsProperty EmitterProperty EndAngleProperty FadeOutProperty GravityProperty IsAnimationEnabledProperty IsCompleteProperty LifetimeProperty MaximumInitialVelocityProperty MaximumRotationVelocityProperty MaximumVelocityProperty MinimumInitialVelocityProperty MinimumRotationVelocityProperty PhysicsProperty ShapesProperty StartAngleProperty Properties Colors Emitter EmitterBounds EndAngle FadeOut Gravity IsAnimationEnabled IsComplete Lifetime MaximumInitialVelocity MaximumRotationVelocity MaximumVelocity MinimumInitialVelocity MinimumRotationVelocity Physics Shapes StartAngle Methods Draw(SKCanvas) Update(TimeSpan) UpdateEmitterBounds(double, double)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystemCollection.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystemCollection.-ctor.html",
    "title": "Constructor SKConfettiSystemCollection | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiSystemCollection Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiSystemCollection() public SKConfettiSystemCollection() SKConfettiSystemCollection(IEnumerable<SKConfettiSystem>) public SKConfettiSystemCollection(IEnumerable<SKConfettiSystem> collection) Parameters collection IEnumerable<SKConfettiSystem> SKConfettiSystemCollection(List<SKConfettiSystem>) public SKConfettiSystemCollection(List<SKConfettiSystem> list) Parameters list List<SKConfettiSystem>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystemCollection.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiSystemCollection.html",
    "title": "Class SKConfettiSystemCollection | SkiaSharp.Extended",
    "keywords": "Class SKConfettiSystemCollection Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiSystemCollection : ObservableCollection<SKConfettiSystem>, IList<SKConfettiSystem>, ICollection<SKConfettiSystem>, IList, ICollection, IReadOnlyList<SKConfettiSystem>, IReadOnlyCollection<SKConfettiSystem>, IEnumerable<SKConfettiSystem>, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged Inheritance object Collection<SKConfettiSystem> ObservableCollection<SKConfettiSystem> SKConfettiSystemCollection Implements IList<SKConfettiSystem> ICollection<SKConfettiSystem> IList ICollection IReadOnlyList<SKConfettiSystem> IReadOnlyCollection<SKConfettiSystem> IEnumerable<SKConfettiSystem> IEnumerable INotifyCollectionChanged INotifyPropertyChanged Inherited Members ObservableCollection<SKConfettiSystem>.Move(int, int) ObservableCollection<SKConfettiSystem>.ClearItems() ObservableCollection<SKConfettiSystem>.RemoveItem(int) ObservableCollection<SKConfettiSystem>.InsertItem(int, SKConfettiSystem) ObservableCollection<SKConfettiSystem>.SetItem(int, SKConfettiSystem) ObservableCollection<SKConfettiSystem>.MoveItem(int, int) ObservableCollection<SKConfettiSystem>.OnPropertyChanged(PropertyChangedEventArgs) ObservableCollection<SKConfettiSystem>.OnCollectionChanged(NotifyCollectionChangedEventArgs) ObservableCollection<SKConfettiSystem>.BlockReentrancy() ObservableCollection<SKConfettiSystem>.CheckReentrancy() ObservableCollection<SKConfettiSystem>.CollectionChanged ObservableCollection<SKConfettiSystem>.PropertyChanged Collection<SKConfettiSystem>.Add(SKConfettiSystem) Collection<SKConfettiSystem>.Clear() Collection<SKConfettiSystem>.CopyTo(SKConfettiSystem[], int) Collection<SKConfettiSystem>.Contains(SKConfettiSystem) Collection<SKConfettiSystem>.GetEnumerator() Collection<SKConfettiSystem>.IndexOf(SKConfettiSystem) Collection<SKConfettiSystem>.Insert(int, SKConfettiSystem) Collection<SKConfettiSystem>.Remove(SKConfettiSystem) Collection<SKConfettiSystem>.RemoveAt(int) Collection<SKConfettiSystem>.Count Collection<SKConfettiSystem>.Items Collection<SKConfettiSystem>.this[int] object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiSystemCollection() SKConfettiSystemCollection(IEnumerable<SKConfettiSystem>) SKConfettiSystemCollection(List<SKConfettiSystem>)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.-ctor.html",
    "title": "Constructor SKConfettiView | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiView Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKConfettiView() public SKConfettiView()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.IsComplete.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.IsComplete.html",
    "title": "Property IsComplete | SkiaSharp.Extended",
    "keywords": "Property IsComplete Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsComplete public bool IsComplete { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.IsCompleteProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.IsCompleteProperty.html",
    "title": "Field IsCompleteProperty | SkiaSharp.Extended",
    "keywords": "Field IsCompleteProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty IsCompleteProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.OnPaintSurface.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.OnPaintSurface.html",
    "title": "Method OnPaintSurface | SkiaSharp.Extended",
    "keywords": "Method OnPaintSurface Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnPaintSurface(SKCanvas, SKSize) protected override void OnPaintSurface(SKCanvas canvas, SKSize size) Parameters canvas SKCanvas size SKSize"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.Systems.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.Systems.html",
    "title": "Property Systems | SkiaSharp.Extended",
    "keywords": "Property Systems Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Systems public SKConfettiSystemCollection? Systems { get; set; } Property Value SKConfettiSystemCollection"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.SystemsProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.SystemsProperty.html",
    "title": "Field SystemsProperty | SkiaSharp.Extended",
    "keywords": "Field SystemsProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty SystemsProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.Update.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.Update.html",
    "title": "Method Update | SkiaSharp.Extended",
    "keywords": "Method Update Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Update(TimeSpan) protected override void Update(TimeSpan deltaTime) Parameters deltaTime TimeSpan"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKConfettiView.html",
    "title": "Class SKConfettiView | SkiaSharp.Extended",
    "keywords": "Class SKConfettiView Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKConfettiView : SKAnimatedSurfaceView, INotifyPropertyChanged, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, IPropertyMapperView, IHotReloadableView, IReplaceableView, ILayout, ILayoutController, IVisualTreeElement, IContentView, IView, IElement, ITransform, IPadding, ICrossPlatformLayout Inheritance object BindableObject Element StyleableElement NavigableElement VisualElement View Layout TemplatedView SKSurfaceView SKAnimatedSurfaceView SKConfettiView Implements INotifyPropertyChanged IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IPropertyMapperView IHotReloadableView IReplaceableView ILayout ILayoutController IVisualTreeElement IContentView IView IElement ITransform IPadding ICrossPlatformLayout Inherited Members SKAnimatedSurfaceView.IsAnimationEnabledProperty SKAnimatedSurfaceView.IsAnimationEnabled SKSurfaceView.OnApplyTemplate() SKSurfaceView.Invalidate() TemplatedView.ControlTemplateProperty TemplatedView.LayoutChildren(double, double, double, double) TemplatedView.OnMeasure(double, double) TemplatedView.OnChildRemoved(Element, int) TemplatedView.GetTemplateChild(string) TemplatedView.ResolveControlTemplate() TemplatedView.MeasureOverride(double, double) TemplatedView.OnSizeAllocated(double, double) TemplatedView.ArrangeOverride(Rect) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.Measure(double, double, MeasureFlags) Layout.LayoutChildIntoBoundingRegion(VisualElement, Rect) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.CrossPlatformMeasure(double, double) Layout.CrossPlatformArrange(Rect) Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.propertyMapper View.ChangeVisualState() View.GetChildElements(Point) View.OnBindingContextChanged() View.GetRendererOverrides<T>() View.GestureController View.GestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(double, double) VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.InvalidateMeasureOverride() VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.OnParentSet() NavigableElement.Navigation StyleableElement.Style StyleableElement.StyleClass StyleableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiView() Fields IsCompleteProperty SystemsProperty Properties IsComplete Systems Methods OnPaintSurface(SKCanvas, SKSize) Update(TimeSpan)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.-ctor.html",
    "title": "Constructor SKFileLottieImageSource | SkiaSharp.Extended",
    "keywords": "Constructor SKFileLottieImageSource Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKFileLottieImageSource() public SKFileLottieImageSource()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.File.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.File.html",
    "title": "Property File | SkiaSharp.Extended",
    "keywords": "Property File Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll File public string? File { get; set; } Property Value string"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.FileProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.FileProperty.html",
    "title": "Field FileProperty | SkiaSharp.Extended",
    "keywords": "Field FileProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty FileProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.IsEmpty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.IsEmpty.html",
    "title": "Property IsEmpty | SkiaSharp.Extended",
    "keywords": "Property IsEmpty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsEmpty public override bool IsEmpty { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.LoadAnimationAsync.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.LoadAnimationAsync.html",
    "title": "Method LoadAnimationAsync | SkiaSharp.Extended",
    "keywords": "Method LoadAnimationAsync Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll LoadAnimationAsync(CancellationToken) public override Task<SKLottieAnimation> LoadAnimationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<SKLottieAnimation>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKFileLottieImageSource.html",
    "title": "Class SKFileLottieImageSource | SkiaSharp.Extended",
    "keywords": "Class SKFileLottieImageSource Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKFileLottieImageSource : SKLottieImageSource, INotifyPropertyChanged, IElementController, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IElement Inheritance object BindableObject Element SKLottieImageSource SKFileLottieImageSource Implements INotifyPropertyChanged IElementController IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IElement Inherited Members SKLottieImageSource.FromUri(Uri) SKLottieImageSource.FromFile(string) SKLottieImageSource.FromStream(Func<CancellationToken, Task<Stream>>) SKLottieImageSource.FromStream(Stream) SKLottieImageSource.OnSourceChanged(BindableObject, object, object) SKLottieImageSource.SourceChanged Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnBindingContextChanged() Element.OnChildAdded(Element) Element.OnChildRemoved(Element, int) Element.OnParentSet() Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.Handler Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKFileLottieImageSource() Fields FileProperty Properties File IsEmpty Methods LoadAnimationAsync(CancellationToken)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimation.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimation.-ctor.html",
    "title": "Constructor SKLottieAnimation | SkiaSharp.Extended",
    "keywords": "Constructor SKLottieAnimation Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKLottieAnimation() public SKLottieAnimation() SKLottieAnimation(Animation?) public SKLottieAnimation(Animation? animation) Parameters animation Animation"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimation.Animation.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimation.Animation.html",
    "title": "Property Animation | SkiaSharp.Extended",
    "keywords": "Property Animation Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Animation public Animation? Animation { get; } Property Value Animation"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimation.IsLoaded.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimation.IsLoaded.html",
    "title": "Property IsLoaded | SkiaSharp.Extended",
    "keywords": "Property IsLoaded Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsLoaded public bool IsLoaded { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimation.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimation.html",
    "title": "Class SKLottieAnimation | SkiaSharp.Extended",
    "keywords": "Class SKLottieAnimation Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKLottieAnimation Inheritance object SKLottieAnimation Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKLottieAnimation() SKLottieAnimation(Animation?) Properties Animation IsLoaded"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationFailedEventArgs.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationFailedEventArgs.-ctor.html",
    "title": "Constructor SKLottieAnimationFailedEventArgs | SkiaSharp.Extended",
    "keywords": "Constructor SKLottieAnimationFailedEventArgs Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKLottieAnimationFailedEventArgs() public SKLottieAnimationFailedEventArgs() SKLottieAnimationFailedEventArgs(Exception?) public SKLottieAnimationFailedEventArgs(Exception? exception) Parameters exception Exception"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationFailedEventArgs.Exception.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationFailedEventArgs.Exception.html",
    "title": "Property Exception | SkiaSharp.Extended",
    "keywords": "Property Exception Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Exception public Exception? Exception { get; } Property Value Exception"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationFailedEventArgs.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationFailedEventArgs.html",
    "title": "Class SKLottieAnimationFailedEventArgs | SkiaSharp.Extended",
    "keywords": "Class SKLottieAnimationFailedEventArgs Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKLottieAnimationFailedEventArgs : EventArgs Inheritance object EventArgs SKLottieAnimationFailedEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKLottieAnimationFailedEventArgs() SKLottieAnimationFailedEventArgs(Exception?) Properties Exception"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.-ctor.html",
    "title": "Constructor SKLottieAnimationLoadedEventArgs | SkiaSharp.Extended",
    "keywords": "Constructor SKLottieAnimationLoadedEventArgs Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKLottieAnimationLoadedEventArgs(Size, TimeSpan, double) public SKLottieAnimationLoadedEventArgs(Size size, TimeSpan duration, double fps) Parameters size Size duration TimeSpan fps double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.Duration.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.Duration.html",
    "title": "Property Duration | SkiaSharp.Extended",
    "keywords": "Property Duration Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Duration public TimeSpan Duration { get; } Property Value TimeSpan"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.Fps.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.Fps.html",
    "title": "Property Fps | SkiaSharp.Extended",
    "keywords": "Property Fps Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Fps public double Fps { get; } Property Value double"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.Size.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.Size.html",
    "title": "Property Size | SkiaSharp.Extended",
    "keywords": "Property Size Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Size public Size Size { get; } Property Value Size"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieAnimationLoadedEventArgs.html",
    "title": "Class SKLottieAnimationLoadedEventArgs | SkiaSharp.Extended",
    "keywords": "Class SKLottieAnimationLoadedEventArgs Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKLottieAnimationLoadedEventArgs : EventArgs Inheritance object EventArgs SKLottieAnimationLoadedEventArgs Inherited Members EventArgs.Empty object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKLottieAnimationLoadedEventArgs(Size, TimeSpan, double) Properties Duration Fps Size"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.-ctor.html",
    "title": "Constructor SKLottieImageSource | SkiaSharp.Extended",
    "keywords": "Constructor SKLottieImageSource Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKLottieImageSource() protected SKLottieImageSource()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.FromFile.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.FromFile.html",
    "title": "Method FromFile | SkiaSharp.Extended",
    "keywords": "Method FromFile Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll FromFile(string) public static object FromFile(string file) Parameters file string Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.FromStream.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.FromStream.html",
    "title": "Method FromStream | SkiaSharp.Extended",
    "keywords": "Method FromStream Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll FromStream(Func<CancellationToken, Task<Stream?>>) public static object FromStream(Func<CancellationToken, Task<Stream?>> getter) Parameters getter Func<CancellationToken, Task<Stream>> Returns object FromStream(Stream) public static object FromStream(Stream stream) Parameters stream Stream Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.FromUri.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.FromUri.html",
    "title": "Method FromUri | SkiaSharp.Extended",
    "keywords": "Method FromUri Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll FromUri(Uri) public static object FromUri(Uri uri) Parameters uri Uri Returns object"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.IsEmpty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.IsEmpty.html",
    "title": "Property IsEmpty | SkiaSharp.Extended",
    "keywords": "Property IsEmpty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsEmpty public virtual bool IsEmpty { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.LoadAnimationAsync.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.LoadAnimationAsync.html",
    "title": "Method LoadAnimationAsync | SkiaSharp.Extended",
    "keywords": "Method LoadAnimationAsync Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll LoadAnimationAsync(CancellationToken) public abstract Task<SKLottieAnimation> LoadAnimationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<SKLottieAnimation>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.OnSourceChanged.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.OnSourceChanged.html",
    "title": "Method OnSourceChanged | SkiaSharp.Extended",
    "keywords": "Method OnSourceChanged Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnSourceChanged(BindableObject, object, object) protected static void OnSourceChanged(BindableObject bindable, object oldValue, object newValue) Parameters bindable BindableObject oldValue object newValue object"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.SourceChanged.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.SourceChanged.html",
    "title": "Event SourceChanged | SkiaSharp.Extended",
    "keywords": "Event SourceChanged Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public event EventHandler SourceChanged Returns EventHandler"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieImageSource.html",
    "title": "Class SKLottieImageSource | SkiaSharp.Extended",
    "keywords": "Class SKLottieImageSource Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll [TypeConverter(typeof(SKLottieImageSourceConverter))] public abstract class SKLottieImageSource : Element, INotifyPropertyChanged, IElementController, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IElement Inheritance object BindableObject Element SKLottieImageSource Implements INotifyPropertyChanged IElementController IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IElement Derived SKFileLottieImageSource SKStreamLottieImageSource SKUriLottieImageSource Inherited Members Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnBindingContextChanged() Element.OnChildAdded(Element) Element.OnChildRemoved(Element, int) Element.OnParentSet() Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.Handler Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKLottieImageSource() Properties IsEmpty Methods FromFile(string) FromStream(Func<CancellationToken, Task<Stream?>>) FromStream(Stream) FromUri(Uri) LoadAnimationAsync(CancellationToken) OnSourceChanged(BindableObject, object, object) Events SourceChanged"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieRepeatMode.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieRepeatMode.html",
    "title": "Enum SKLottieRepeatMode | SkiaSharp.Extended",
    "keywords": "Enum SKLottieRepeatMode Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public enum SKLottieRepeatMode Fields Restart = 0 Reverse = 1"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.-ctor.html",
    "title": "Constructor SKLottieView | SkiaSharp.Extended",
    "keywords": "Constructor SKLottieView Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKLottieView() public SKLottieView()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.AnimationCompleted.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.AnimationCompleted.html",
    "title": "Event AnimationCompleted | SkiaSharp.Extended",
    "keywords": "Event AnimationCompleted Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public event EventHandler? AnimationCompleted Returns EventHandler"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.AnimationFailed.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.AnimationFailed.html",
    "title": "Event AnimationFailed | SkiaSharp.Extended",
    "keywords": "Event AnimationFailed Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public event EventHandler<SKLottieAnimationFailedEventArgs>? AnimationFailed Returns EventHandler<SKLottieAnimationFailedEventArgs>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.AnimationLoaded.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.AnimationLoaded.html",
    "title": "Event AnimationLoaded | SkiaSharp.Extended",
    "keywords": "Event AnimationLoaded Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public event EventHandler<SKLottieAnimationLoadedEventArgs>? AnimationLoaded Returns EventHandler<SKLottieAnimationLoadedEventArgs>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.Duration.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.Duration.html",
    "title": "Property Duration | SkiaSharp.Extended",
    "keywords": "Property Duration Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Duration public TimeSpan Duration { get; } Property Value TimeSpan"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.DurationProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.DurationProperty.html",
    "title": "Field DurationProperty | SkiaSharp.Extended",
    "keywords": "Field DurationProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty DurationProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.IsComplete.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.IsComplete.html",
    "title": "Property IsComplete | SkiaSharp.Extended",
    "keywords": "Property IsComplete Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsComplete public bool IsComplete { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.IsCompleteProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.IsCompleteProperty.html",
    "title": "Field IsCompleteProperty | SkiaSharp.Extended",
    "keywords": "Field IsCompleteProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty IsCompleteProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.OnPaintSurface.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.OnPaintSurface.html",
    "title": "Method OnPaintSurface | SkiaSharp.Extended",
    "keywords": "Method OnPaintSurface Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnPaintSurface(SKCanvas, SKSize) protected override void OnPaintSurface(SKCanvas canvas, SKSize size) Parameters canvas SKCanvas size SKSize"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.Progress.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.Progress.html",
    "title": "Property Progress | SkiaSharp.Extended",
    "keywords": "Property Progress Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Progress public TimeSpan Progress { get; set; } Property Value TimeSpan"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.ProgressProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.ProgressProperty.html",
    "title": "Field ProgressProperty | SkiaSharp.Extended",
    "keywords": "Field ProgressProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty ProgressProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.RepeatCount.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.RepeatCount.html",
    "title": "Property RepeatCount | SkiaSharp.Extended",
    "keywords": "Property RepeatCount Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll RepeatCount public int RepeatCount { get; set; } Property Value int"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.RepeatCountProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.RepeatCountProperty.html",
    "title": "Field RepeatCountProperty | SkiaSharp.Extended",
    "keywords": "Field RepeatCountProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty RepeatCountProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.RepeatMode.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.RepeatMode.html",
    "title": "Property RepeatMode | SkiaSharp.Extended",
    "keywords": "Property RepeatMode Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll RepeatMode public SKLottieRepeatMode RepeatMode { get; set; } Property Value SKLottieRepeatMode"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.RepeatModeProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.RepeatModeProperty.html",
    "title": "Field RepeatModeProperty | SkiaSharp.Extended",
    "keywords": "Field RepeatModeProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty RepeatModeProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.Source.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.Source.html",
    "title": "Property Source | SkiaSharp.Extended",
    "keywords": "Property Source Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Source public SKLottieImageSource? Source { get; set; } Property Value SKLottieImageSource"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.SourceProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.SourceProperty.html",
    "title": "Field SourceProperty | SkiaSharp.Extended",
    "keywords": "Field SourceProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty SourceProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.Update.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.Update.html",
    "title": "Method Update | SkiaSharp.Extended",
    "keywords": "Method Update Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Update(TimeSpan) protected override void Update(TimeSpan deltaTime) Parameters deltaTime TimeSpan"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKLottieView.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKLottieView.html",
    "title": "Class SKLottieView | SkiaSharp.Extended",
    "keywords": "Class SKLottieView Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKLottieView : SKAnimatedSurfaceView, INotifyPropertyChanged, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, IPropertyMapperView, IHotReloadableView, IReplaceableView, ILayout, ILayoutController, IVisualTreeElement, IContentView, IView, IElement, ITransform, IPadding, ICrossPlatformLayout Inheritance object BindableObject Element StyleableElement NavigableElement VisualElement View Layout TemplatedView SKSurfaceView SKAnimatedSurfaceView SKLottieView Implements INotifyPropertyChanged IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IPropertyMapperView IHotReloadableView IReplaceableView ILayout ILayoutController IVisualTreeElement IContentView IView IElement ITransform IPadding ICrossPlatformLayout Inherited Members SKAnimatedSurfaceView.IsAnimationEnabledProperty SKAnimatedSurfaceView.IsAnimationEnabled SKSurfaceView.OnApplyTemplate() SKSurfaceView.Invalidate() TemplatedView.ControlTemplateProperty TemplatedView.LayoutChildren(double, double, double, double) TemplatedView.OnMeasure(double, double) TemplatedView.OnChildRemoved(Element, int) TemplatedView.GetTemplateChild(string) TemplatedView.ResolveControlTemplate() TemplatedView.MeasureOverride(double, double) TemplatedView.OnSizeAllocated(double, double) TemplatedView.ArrangeOverride(Rect) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.Measure(double, double, MeasureFlags) Layout.LayoutChildIntoBoundingRegion(VisualElement, Rect) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.CrossPlatformMeasure(double, double) Layout.CrossPlatformArrange(Rect) Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.propertyMapper View.ChangeVisualState() View.GetChildElements(Point) View.OnBindingContextChanged() View.GetRendererOverrides<T>() View.GestureController View.GestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(double, double) VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.InvalidateMeasureOverride() VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.OnParentSet() NavigableElement.Navigation StyleableElement.Style StyleableElement.StyleClass StyleableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKLottieView() Fields DurationProperty IsCompleteProperty ProgressProperty RepeatCountProperty RepeatModeProperty SourceProperty Properties Duration IsComplete Progress RepeatCount RepeatMode Source Methods OnPaintSurface(SKCanvas, SKSize) Update(TimeSpan) Events AnimationCompleted AnimationFailed AnimationLoaded"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.-ctor.html",
    "title": "Constructor SKStreamLottieImageSource | SkiaSharp.Extended",
    "keywords": "Constructor SKStreamLottieImageSource Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKStreamLottieImageSource() public SKStreamLottieImageSource()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.IsEmpty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.IsEmpty.html",
    "title": "Property IsEmpty | SkiaSharp.Extended",
    "keywords": "Property IsEmpty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsEmpty public override bool IsEmpty { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.LoadAnimationAsync.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.LoadAnimationAsync.html",
    "title": "Method LoadAnimationAsync | SkiaSharp.Extended",
    "keywords": "Method LoadAnimationAsync Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll LoadAnimationAsync(CancellationToken) public override Task<SKLottieAnimation> LoadAnimationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<SKLottieAnimation>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.Stream.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.Stream.html",
    "title": "Property Stream | SkiaSharp.Extended",
    "keywords": "Property Stream Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Stream public Func<CancellationToken, Task<Stream?>>? Stream { get; set; } Property Value Func<CancellationToken, Task<Stream>>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.StreamProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.StreamProperty.html",
    "title": "Field StreamProperty | SkiaSharp.Extended",
    "keywords": "Field StreamProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty StreamProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKStreamLottieImageSource.html",
    "title": "Class SKStreamLottieImageSource | SkiaSharp.Extended",
    "keywords": "Class SKStreamLottieImageSource Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKStreamLottieImageSource : SKLottieImageSource, INotifyPropertyChanged, IElementController, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IElement Inheritance object BindableObject Element SKLottieImageSource SKStreamLottieImageSource Implements INotifyPropertyChanged IElementController IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IElement Inherited Members SKLottieImageSource.FromUri(Uri) SKLottieImageSource.FromFile(string) SKLottieImageSource.FromStream(Func<CancellationToken, Task<Stream>>) SKLottieImageSource.FromStream(Stream) SKLottieImageSource.OnSourceChanged(BindableObject, object, object) SKLottieImageSource.SourceChanged Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnBindingContextChanged() Element.OnChildAdded(Element) Element.OnChildRemoved(Element, int) Element.OnParentSet() Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.Handler Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKStreamLottieImageSource() Fields StreamProperty Properties IsEmpty Stream Methods LoadAnimationAsync(CancellationToken)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.-ctor.html",
    "title": "Constructor SKSurfaceView | SkiaSharp.Extended",
    "keywords": "Constructor SKSurfaceView Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKSurfaceView() public SKSurfaceView()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.Invalidate.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.Invalidate.html",
    "title": "Method Invalidate | SkiaSharp.Extended",
    "keywords": "Method Invalidate Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Invalidate() public void Invalidate()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.OnApplyTemplate.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.OnApplyTemplate.html",
    "title": "Method OnApplyTemplate | SkiaSharp.Extended",
    "keywords": "Method OnApplyTemplate Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnApplyTemplate() protected override void OnApplyTemplate()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.OnPaintSurface.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.OnPaintSurface.html",
    "title": "Method OnPaintSurface | SkiaSharp.Extended",
    "keywords": "Method OnPaintSurface Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll OnPaintSurface(SKCanvas, SKSize) protected virtual void OnPaintSurface(SKCanvas canvas, SKSize size) Parameters canvas SKCanvas size SKSize"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKSurfaceView.html",
    "title": "Class SKSurfaceView | SkiaSharp.Extended",
    "keywords": "Class SKSurfaceView Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKSurfaceView : TemplatedView, INotifyPropertyChanged, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, IPropertyMapperView, IHotReloadableView, IReplaceableView, ILayout, ILayoutController, IVisualTreeElement, IContentView, IView, IElement, ITransform, IPadding, ICrossPlatformLayout Inheritance object BindableObject Element StyleableElement NavigableElement VisualElement View Layout TemplatedView SKSurfaceView Implements INotifyPropertyChanged IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IPropertyMapperView IHotReloadableView IReplaceableView ILayout ILayoutController IVisualTreeElement IContentView IView IElement ITransform IPadding ICrossPlatformLayout Derived SKAnimatedSurfaceView Inherited Members TemplatedView.ControlTemplateProperty TemplatedView.LayoutChildren(double, double, double, double) TemplatedView.OnMeasure(double, double) TemplatedView.OnChildRemoved(Element, int) TemplatedView.GetTemplateChild(string) TemplatedView.ResolveControlTemplate() TemplatedView.MeasureOverride(double, double) TemplatedView.OnSizeAllocated(double, double) TemplatedView.ArrangeOverride(Rect) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.Measure(double, double, MeasureFlags) Layout.LayoutChildIntoBoundingRegion(VisualElement, Rect) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.CrossPlatformMeasure(double, double) Layout.CrossPlatformArrange(Rect) Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.propertyMapper View.ChangeVisualState() View.GetChildElements(Point) View.OnBindingContextChanged() View.GetRendererOverrides<T>() View.GestureController View.GestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(double, double) VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.InvalidateMeasureOverride() VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.OnParentSet() NavigableElement.Navigation StyleableElement.Style StyleableElement.StyleClass StyleableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKSurfaceView() Methods Invalidate() OnApplyTemplate() OnPaintSurface(SKCanvas, SKSize)"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.-ctor.html",
    "title": "Constructor SKUriLottieImageSource | SkiaSharp.Extended",
    "keywords": "Constructor SKUriLottieImageSource Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll SKUriLottieImageSource() public SKUriLottieImageSource()"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.IsEmpty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.IsEmpty.html",
    "title": "Property IsEmpty | SkiaSharp.Extended",
    "keywords": "Property IsEmpty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll IsEmpty public override bool IsEmpty { get; } Property Value bool"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.LoadAnimationAsync.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.LoadAnimationAsync.html",
    "title": "Method LoadAnimationAsync | SkiaSharp.Extended",
    "keywords": "Method LoadAnimationAsync Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll LoadAnimationAsync(CancellationToken) public override Task<SKLottieAnimation> LoadAnimationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<SKLottieAnimation>"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.Uri.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.Uri.html",
    "title": "Property Uri | SkiaSharp.Extended",
    "keywords": "Property Uri Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll Uri public Uri? Uri { get; set; } Property Value Uri"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.UriProperty.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.UriProperty.html",
    "title": "Field UriProperty | SkiaSharp.Extended",
    "keywords": "Field UriProperty Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public static readonly BindableProperty UriProperty Returns BindableProperty"
  },
  "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.SKUriLottieImageSource.html",
    "title": "Class SKUriLottieImageSource | SkiaSharp.Extended",
    "keywords": "Class SKUriLottieImageSource Namespace SkiaSharp.Extended.UI.Controls Assembly SkiaSharp.Extended.UI.dll public class SKUriLottieImageSource : SKLottieImageSource, INotifyPropertyChanged, IElementController, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IElement Inheritance object BindableObject Element SKLottieImageSource SKUriLottieImageSource Implements INotifyPropertyChanged IElementController IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IElement Inherited Members SKLottieImageSource.FromUri(Uri) SKLottieImageSource.FromFile(string) SKLottieImageSource.FromStream(Func<CancellationToken, Task<Stream>>) SKLottieImageSource.FromStream(Stream) SKLottieImageSource.OnSourceChanged(BindableObject, object, object) SKLottieImageSource.SourceChanged Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnBindingContextChanged() Element.OnChildAdded(Element) Element.OnChildRemoved(Element, int) Element.OnParentSet() Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.Handler Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKUriLottieImageSource() Fields UriProperty Properties IsEmpty Uri Methods LoadAnimationAsync(CancellationToken)"
  },
  "api/SkiaSharp.Extended.UI.Controls.Themes.SKConfettiViewResources.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Themes.SKConfettiViewResources.-ctor.html",
    "title": "Constructor SKConfettiViewResources | SkiaSharp.Extended",
    "keywords": "Constructor SKConfettiViewResources Namespace SkiaSharp.Extended.UI.Controls.Themes Assembly SkiaSharp.Extended.UI.dll SKConfettiViewResources() public SKConfettiViewResources()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Themes.SKConfettiViewResources.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Themes.SKConfettiViewResources.html",
    "title": "Class SKConfettiViewResources | SkiaSharp.Extended",
    "keywords": "Class SKConfettiViewResources Namespace SkiaSharp.Extended.UI.Controls.Themes Assembly SkiaSharp.Extended.UI.dll [XamlFilePath(\"Controls\\\\Confetti\\\\SKConfettiViewResources.shared.xaml\")] public class SKConfettiViewResources : ResourceDictionary, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable Inheritance object ResourceDictionary SKConfettiViewResources Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IEnumerable Inherited Members ResourceDictionary.Clear() ResourceDictionary.Add(string, object) ResourceDictionary.ContainsKey(string) ResourceDictionary.Remove(string) ResourceDictionary.GetEnumerator() ResourceDictionary.TryGetValue(string, out object) ResourceDictionary.Add(Style) ResourceDictionary.Add(ResourceDictionary) ResourceDictionary.Add(StyleSheet) ResourceDictionary.Source ResourceDictionary.MergedDictionaries ResourceDictionary.Count ResourceDictionary.this[string] ResourceDictionary.Keys ResourceDictionary.Values object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKConfettiViewResources()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Themes.SKLottieViewResources.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Themes.SKLottieViewResources.-ctor.html",
    "title": "Constructor SKLottieViewResources | SkiaSharp.Extended",
    "keywords": "Constructor SKLottieViewResources Namespace SkiaSharp.Extended.UI.Controls.Themes Assembly SkiaSharp.Extended.UI.dll SKLottieViewResources() public SKLottieViewResources()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Themes.SKLottieViewResources.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Themes.SKLottieViewResources.html",
    "title": "Class SKLottieViewResources | SkiaSharp.Extended",
    "keywords": "Class SKLottieViewResources Namespace SkiaSharp.Extended.UI.Controls.Themes Assembly SkiaSharp.Extended.UI.dll [XamlFilePath(\"Controls\\\\Lottie\\\\SKLottieViewResources.shared.xaml\")] public class SKLottieViewResources : ResourceDictionary, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable Inheritance object ResourceDictionary SKLottieViewResources Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IEnumerable Inherited Members ResourceDictionary.Clear() ResourceDictionary.Add(string, object) ResourceDictionary.ContainsKey(string) ResourceDictionary.Remove(string) ResourceDictionary.GetEnumerator() ResourceDictionary.TryGetValue(string, out object) ResourceDictionary.Add(Style) ResourceDictionary.Add(ResourceDictionary) ResourceDictionary.Add(StyleSheet) ResourceDictionary.Source ResourceDictionary.MergedDictionaries ResourceDictionary.Count ResourceDictionary.this[string] ResourceDictionary.Keys ResourceDictionary.Values object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKLottieViewResources()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Themes.SKSurfaceViewResources.-ctor.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Themes.SKSurfaceViewResources.-ctor.html",
    "title": "Constructor SKSurfaceViewResources | SkiaSharp.Extended",
    "keywords": "Constructor SKSurfaceViewResources Namespace SkiaSharp.Extended.UI.Controls.Themes Assembly SkiaSharp.Extended.UI.dll SKSurfaceViewResources() public SKSurfaceViewResources()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Themes.SKSurfaceViewResources.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Themes.SKSurfaceViewResources.html",
    "title": "Class SKSurfaceViewResources | SkiaSharp.Extended",
    "keywords": "Class SKSurfaceViewResources Namespace SkiaSharp.Extended.UI.Controls.Themes Assembly SkiaSharp.Extended.UI.dll [XamlFilePath(\"Controls\\\\SKSurfaceViewResources.shared.xaml\")] public class SKSurfaceViewResources : ResourceDictionary, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable Inheritance object ResourceDictionary SKSurfaceViewResources Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IEnumerable Inherited Members ResourceDictionary.Clear() ResourceDictionary.Add(string, object) ResourceDictionary.ContainsKey(string) ResourceDictionary.Remove(string) ResourceDictionary.GetEnumerator() ResourceDictionary.TryGetValue(string, out object) ResourceDictionary.Add(Style) ResourceDictionary.Add(ResourceDictionary) ResourceDictionary.Add(StyleSheet) ResourceDictionary.Source ResourceDictionary.MergedDictionaries ResourceDictionary.Count ResourceDictionary.this[string] ResourceDictionary.Keys ResourceDictionary.Values object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SKSurfaceViewResources()"
  },
  "api/SkiaSharp.Extended.UI.Controls.Themes.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.Themes.html",
    "title": "Namespace SkiaSharp.Extended.UI.Controls.Themes | SkiaSharp.Extended",
    "keywords": "Namespace SkiaSharp.Extended.UI.Controls.Themes Classes SKConfettiViewResources SKLottieViewResources SKSurfaceViewResources"
  },
  "api/SkiaSharp.Extended.UI.Controls.html": {
    "href": "api/SkiaSharp.Extended.UI.Controls.html",
    "title": "Namespace SkiaSharp.Extended.UI.Controls | SkiaSharp.Extended",
    "keywords": "Namespace SkiaSharp.Extended.UI.Controls Classes SKAnimatedSurfaceView SKConfettiCircleShape SKConfettiColorCollection SKConfettiEmitter SKConfettiOvalShape SKConfettiPathShape SKConfettiPhysicsCollection SKConfettiRectShape SKConfettiShape SKConfettiShapeCollection SKConfettiSquareShape SKConfettiSystem SKConfettiSystemCollection SKConfettiView SKFileLottieImageSource SKLottieAnimation SKLottieAnimationFailedEventArgs SKLottieAnimationLoadedEventArgs SKLottieImageSource SKLottieView SKStreamLottieImageSource SKSurfaceView SKUriLottieImageSource Structs SKConfettiEmitterBounds SKConfettiPhysics Enums SKConfettiEmitterSide SKLottieRepeatMode"
  },
  "api/SkiaSharp.Extended.html": {
    "href": "api/SkiaSharp.Extended.html",
    "title": "Namespace SkiaSharp.Extended | SkiaSharp.Extended",
    "keywords": "Namespace SkiaSharp.Extended Classes SKBlurHash SKGeometry SKGeometryExtensions SKPathInterpolation SKPixelComparer SKPixelComparisonResult"
  },
  "docs/skblurhash.html": {
    "href": "docs/skblurhash.html",
    "title": "SKBlurHash | SkiaSharp.Extended",
    "keywords": "SKBlurHash A BlurHash is a compact representation of a placeholder for an image. For example, the SkiaSharp logo can be reduced to a tiny string: LjPsbRxG%gx^aJxuM|W=?^X8Mxn$ Original (79.7 KB) BlurHash (36 bytes) Methods TODO"
  },
  "docs/skconfettiview.html": {
    "href": "docs/skconfettiview.html",
    "title": "SKConfettiView | SkiaSharp.Extended",
    "keywords": "SKConfettiView The confetti view is a container for one or more systems of particles. Top + Stream Center + Burst Sides + Multiple Properties The main property of a confetti view is the Systems property: Property Type Description Systems SKConfettiSystemCollection The collection of systems in the view. IsAnimationEnabled bool Determines whether the control will play the animation provided. IsComplete bool A value that indicates whether all systems are complete. Parts In addition to the properties on the view and all the systems, there is the overall control template that can directly influence the visual appearance of the view. The default template is defined as: <ControlTemplate x:Key=\"SKConfettiViewControlTemplate\"> <skia:SKCanvasView x:Name=\"PART_DrawingSurface\" /> </ControlTemplate> Part Description PART_DrawingSurface This part can either be a SKCanvasView or a SKGLView and describes the actual rendering surface for the confetti. System Every confetti view consists up one or more systems (SKConfettiSystem). Each system is a container for an emitter (SKConfettiEmitter) along with many properties on how the system runs. Property Type Description Emitter SKConfettiEmitter An emitter controls how the confetti particles are generated and at what rate for how long. EmitterBounds SKConfettiEmitterBounds The emitter bounds controls where in the view the particles appear. This can be from a side (left, right, top, bottom), a point or a rectangular region. Gravity Point The gravity is a acceleration vector that indicates the direction and strength of the gravity in the system. Colors SKConfettiColorCollection A collection of Color instances that determine the available colors for the confetti. Physics SKConfettiPhysicsCollection A collection of SKConfettiPhysics instances that determine the \"base\" mass and size of each confetti particle. Shapes SKConfettiShapeCollection A collection of SKConfettiShape instances that determine what each confetti particle looks like. StartAngle double The angle (in degrees) to form the start of the emission region. EndAngle double The angle (in degrees) to form the end of the emission region. MinimumInitialVelocity double The minimum initial velocity of the confetti particles. MaximumInitialVelocity double The maximum initial velocity of the confetti particles. MinimumRotationVelocity double The minimum initial rotation velocity of the confetti particles. MaximumRotationVelocity double The maximum initial rotation velocity of the confetti particles. MaximumVelocity double The maximum velocity the confetti particle can reach. FadeOut bool Whether or not the particle should fade out at the end of its life. Lifetime double The duration in seconds for how long the particle is allowed to live. IsAnimationEnabled bool Controls whether the system is running or not. IsComplete bool A value that indicates whether the system is complete and all systems and particles are also complete. Emitter Each system has an emitter instance that controls how the confetti particles are generated and at what rate for how long. Property Type Description ParticleRate int The number of particles to generate each second. MaxParticles int The maximum number of particles allowed by the emitter. A value of -1 indicates no limit. Duration double The duration in seconds of how long the emitter runs for. A value of 0 indicates that all particles are emitted instantly. IsComplete bool A value that indicates whether the emitter has generated all the particles and they have all disappeared. Helper Emitters To make creating emitters easier, there are a few static helper methods on the SKConfettiEmitter type: Property Description Burst Create an emitter that generates the specified number of the particles instantly. Infinite Create an emitter that releases the specified number of particles each second. Stream Create an emitter that releases the specified number of particles for the specified amount of time. Shapes There are several simple types of \"shapes\" that the confetti can come in: Name Type Description Circle SKConfettiCircleShape This is a simple circle shape. Square SKConfettiSquareShape This is a simple square with equal length sides. Oval SKConfettiOvalShape This is the stretched circle or ellipse shape. This has a useful property HeightRatio that can be used to control the width/height ratio in the range of [0..1]. Rectangle SKConfettiRectShape This is a rectangle. This has a useful property HeightRatio that can be used to control the width/height ratio in the range of [0..1]. Advanced Shapes In addition to those, there is also a way to have custom paths as a shape: Name Type Description Paths SKConfettiPathShape This is a generic shape that supports any SKPath instance Custom SKConfettiShape This is the base type for shapes. Custom drawing code can be used by deriving from this type and overriding the OnDraw method. When making a custom shape, the instance is re-used, so all state needs to be set before drawing. The provided SKPaint instance is reset, so any properties set needs to be re-set. Custom Shapes public class ConfettiStar : SKConfettiShape { private readonly int points; public ConfettiStar(int points) { this.points = points; } protected override void OnDraw(SKCanvas canvas, SKPaint paint, float size) { using var star = SKGeometry.CreateRegularStarPath(size, size / 2, points); canvas.DrawPath(star, paint); } } Physics Each particle can have a size and mass, and the emitter can select one of them randomly: Property Type Description Mass double The mass of the particle which resists the force of gravity. Size double The physical size of the particle rendered."
  },
  "docs/skgeometry.html": {
    "href": "docs/skgeometry.html",
    "title": "SKGeometry | SkiaSharp.Extended",
    "keywords": "SKGeometry SKGeometry provides several helper methods that can be used to create common geometric shapes. Methods There are a few helper methods that can be used to create geometric shapes in the SKGeometry type: Method Description CreateSectorPath Creates a path with the shape of sector/section of a doughnut/pie chart. CreatePiePath Creates a path with the shape of a doughnut/pie chart. CreateSquarePath Creates a path with the shape of a square. CreateRectanglePath Creates a path with the shape of a rectangle. CreateTrianglePath Creates a path with the shape of a triangle. CreateRegularPolygonPath Creates a path with the shape of some regular polygon. CreateRegularStarPath Creates a path with the shape of a square. Extension Methods Some of these shapes can also be draw directly on a SKCanvas using the extensions methods: SKCanvas canvas = ... canvas.DrawStar( 100, 100, // x, y 100, // outer radius 50, // inner radius 5); // points"
  },
  "docs/sklottieview.html": {
    "href": "docs/sklottieview.html",
    "title": "SKLottieView | SkiaSharp.Extended",
    "keywords": "SKLottieView The Lottie view is a animated view that can playback Lottie files. Preview Properties There are several properties that can be used to control th animation playback: Property Type Description Source SKLottieImageSource The Lottie image source to playback in the view. Duration TimeSpan A value indicating the total duration of the animation. Progress TimeSpan The current playback progress of the animation. RepeatCount int The number of times to repeat the animation. Default is 0 (no repeat). A negative (-1) value will repeat forever. RepeatMode SKLottieRepeatMode The way in which to repeat the animation. Default is Restart. IsAnimationEnabled bool Determines whether the control will play the animation provided. IsComplete bool A value that indicates whether all systems are complete. Events There are a few events that can be used to be notified of animation loading events: Event Type Description AnimationLoaded EventHandler Invoked when the animation has loaded successfully. AnimationFailed EventHandler Invoked when there was an error loading the animation. AnimationCompleted EventHandler Invoked when the animation is finished playing (after all the repeats). Infinite animations never complete so will not trigger the event. Parts In addition to the properties on the view, there is the overall control template that can directly influence the visual appearance of the view. The default template is defined as: <ControlTemplate x:Key=\"SKLottieViewControlTemplate\"> <skia:SKCanvasView x:Name=\"PART_DrawingSurface\" /> </ControlTemplate> Part Description PART_DrawingSurface This part can either be a SKCanvasView or a SKGLView and describes the actual rendering surface for the animation."
  },
  "docs/skpathinterpolation.html": {
    "href": "docs/skpathinterpolation.html",
    "title": "SKPathInterpolation | SkiaSharp.Extended",
    "keywords": "SKPathInterpolation SKPathInterpolation can be used to create interpolated paths. This is awesome when creating animated shapes or transitions between two paths. Path Interpolation The code is also very simple, just create a SKPathInterpolation instance and then ask for each step: var interpolation = new SKPathInterpolation(startPath, endPath); var halfWayPath = interpolation.Interpolate(0.5f); var almostTherePath = interpolation.Interpolate(0.9f); Methods There are a few helper methods that can be used to create geometric shapes in the SKGeometry type: Method Description Interpolate Creates a new path interpolated between the start and end paths."
  },
  "index.html": {
    "href": "index.html",
    "title": "SkiaSharp.Extended | SkiaSharp.Extended",
    "keywords": "SkiaSharp.Extended SkiaSharp.Extended SkiaSharp.Extended is a collection some cool libraries. SKBlurHash SKBlurHash is a compact representation of a placeholder for an image. Preview SKGeometry SKGeometry provides several helper methods that can be used to create common geometric shapes. SKPathInterpolation SKPathInterpolation can be used to create interpolated paths. This is awesome when creating animated shapes or transitions between two paths. Preview SkiaSharp.Extended.UI.Maui SkiaSharp.Extended.UI.Maui is a collection some great .NET MAUI controls. SKConfettiView The confetti view is a container for one or more systems of confetti particles. Preview SKLottieView The Lottie view is a animated view that can playback Lottie files. Preview"
  }
}