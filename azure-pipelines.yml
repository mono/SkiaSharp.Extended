trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - CODE-OF-CONDUCT.md
      - LICENSE
      - .github/
      - docs/

pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - CODE-OF-CONDUCT.md
      - LICENSE
      - .github/
      - docs/
      - images/

variables:
  BASE_VERSION: 2.0.0
  PREVIEW_LABEL: 'preview'
  BUILD_NUMBER: $[counter(format('{0}_{1}_{2}', variables['BASE_VERSION'], variables['Build.SourceBranch'], variables['PREVIEW_LABEL']), 1)]
  GIT_SHA: $(Build.SourceVersion)
  GIT_BRANCH_NAME: $(Build.SourceBranchName)
  Codeql.Enabled: true
  Codeql.TSAEnabled: true

resources:
  repositories:
    - repository: internal-templates
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin
      ref: refs/heads/main

stages:

  - stage: build
    displayName: Build
    jobs:
      - job: build
        displayName: Build
        pool:
          vmImage: windows-latest
        steps:
          # prepare
          - pwsh: |
              $pr = "pr." + $env:SYSTEM_PULLREQUEST_PULLREQUESTNUMBER
              Write-Host "Preview label: $pr"
              Write-Host "##vso[task.setvariable variable=PREVIEW_LABEL]$pr"
            displayName: Use a special preview label for PRs
            condition: eq(variables['Build.Reason'], 'PullRequest')
          - pwsh: |
              $label = ""
              if ($env:BUILD_REASON -ne "PullRequest") {
                $label = "+" + $env:BUILD_SOURCEBRANCHNAME
              }
              $label = "$env:BASE_VERSION-$env:PREVIEW_LABEL.$env:BUILD_NUMBER$label"
              Write-Host "Build label: $label"
              Write-Host "##vso[build.updatebuildnumber]$label"
            displayName: Update the build number with a more readable one
          - pwsh: dotnet tool restore
            displayName: Restore the dotnet tools
          # PUBLIC ONLY: build everything and run tests
          - ${{ if ne(variables['System.TeamProject'], 'devdiv') }}:
            - pwsh: dotnet cake
              displayName: Build everything
            - task: PublishTestResults@2
              condition: always()
              inputs:
                testResultsFormat: VSTest
                testResultsFiles: output/test-results/*.trx
            - publish: output
              artifact: windows
              condition: always()
              displayName: Upload Logs
          # INTERNAL ONLY: just pack nugets
          - ${{ if eq(variables['System.TeamProject'], 'devdiv') }}:
            - pwsh: dotnet cake --target=pack
              displayName: Pack NuGets
            - publish: output/nugets
              artifact: nuget
              displayName: Upload NuGets

  # sign the nugets
  - ${{ if eq(variables['System.TeamProject'], 'devdiv') }}:
    - stage: signing
      displayName: Sign NuGets
      dependsOn: build
      jobs:
        - template: sign-artifacts/jobs/v2.yml@internal-templates
          parameters:
            usePipelineArtifactTasks: true
            ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
              signType: 'Real'
            ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
              signType: 'Test'
