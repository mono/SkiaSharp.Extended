trigger:
  - master

variables:
  VERBOSITY: normal
  GIT_SHA: $(Build.SourceVersion)
  GIT_BRANCH_NAME: $(Build.SourceBranchName)
  BUILD_NUMBER: $(Build.BuildId)
  MONO_VERSION: 5_16_0
  XCODE_VERSION: 10.1

jobs:
  - job: build_windows
    displayName: Build (Windows)
    pool:
      vmImage: vs2017-win2016
    steps:
      - powershell: .\build.ps1
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: xUnit
          testResultsFiles: 'output/**/TestResult.xml'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: build_windows
          targetPath: 'output'
      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: nuget
          pathToPublish: 'output/nugets'

  - job: build_macos
    displayName: Build (macOS)
    pool:
      vmImage: macos-10.13
    steps:
      - task: InstallAppleCertificate@2
        inputs:
          certSecureFile: 'SkiaSharp iOS Certificate.p12'
      - task: InstallAppleCertificate@2
        inputs:
          certSecureFile: 'SkiaSharp Mac Certificate.p12'
      - task: InstallAppleProvisioningProfile@1
        inputs:
          provProfileSecureFile: 'SkiaSharp iOS Provisioning.mobileprovision'
      - task: InstallAppleProvisioningProfile@1
        inputs:
          provProfileSecureFile: 'SkiaSharp Mac Provisioning.provisionprofile'
      - task: InstallAppleProvisioningProfile@1
        inputs:
          provProfileSecureFile: 'SkiaSharp tvOS Provisioning.mobileprovision'
      - bash: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(MONO_VERSION)
        displayName: Switch to the latest Xamarin SDK
      - bash: echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'/Applications/Xcode_$(XCODE_VERSION).app;sudo xcode-select --switch /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer
        displayName: Switch to the latest Xcode
      - powershell: .\build.ps1
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: xUnit
          testResultsFiles: 'output/**/TestResult.xml'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: build_macos
          targetPath: 'output'

  - job: signing
    displayName: Signing NuGets
    dependsOn: build_windows
    pool:
      name: VSEng-XamarinCustom
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'],'refs/tags/'))
    steps:
      - checkout: none
      - template: azure-templates-sign.yml
        parameters:
          sourceRepo: mono/SkiaSharp.Extended
          targetFolder: 'output/signed'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: nuget-signed
          targetPath: 'output/signed'
